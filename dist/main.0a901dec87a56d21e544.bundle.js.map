{"version":3,"file":"main.0a901dec87a56d21e544.bundle.js","mappings":"yBACA,IAAIA,EAAsB,CAAC,ECA3BA,EAAoB,EAAI,CAACC,EAASC,IAAe,CAChD,QAAQC,KAAOD,EACXF,EAAoB,EAAEE,EAAYC,CAAG,GAAK,CAACH,EAAoB,EAAEC,EAASE,CAAG,GAC/E,OAAO,eAAeF,EAASE,EAAK,CAAE,WAAY,GAAM,IAAKD,EAAWC,CAAG,CAAE,CAAC,CAGjF,ECPAH,EAAoB,EAAK,UAAW,CACnC,GAAI,OAAO,YAAe,SAAU,OAAO,WAC3C,GAAI,CACH,OAAO,MAAQ,IAAI,SAAS,aAAa,EAAE,CAC5C,OAAS,EAAG,CACX,GAAI,OAAO,QAAW,SAAU,OAAO,MACxC,CACD,EAAG,ECPHA,EAAoB,EAAI,CAACI,EAAKC,IAAU,OAAO,UAAU,eAAe,KAAKD,EAAKC,CAAI,G,KCAtF,IAAIC,EACAN,EAAoB,EAAE,gBAAeM,EAAYN,EAAoB,EAAE,SAAW,IACtF,IAAIO,EAAWP,EAAoB,EAAE,SACrC,GAAI,CAACM,GAAaC,IACbA,EAAS,gBACZD,EAAYC,EAAS,cAAc,KAChC,CAACD,GAAW,CACf,IAAIE,EAAUD,EAAS,qBAAqB,QAAQ,EACpD,GAAGC,EAAQ,OAEV,QADIC,EAAID,EAAQ,OAAS,EAClBC,EAAI,KAAO,CAACH,GAAa,CAAC,aAAa,KAAKA,CAAS,IAAIA,EAAYE,EAAQC,GAAG,EAAE,GAE3F,CAID,GAAI,CAACH,EAAW,MAAM,IAAI,MAAM,uDAAuD,EACvFA,EAAYA,EAAU,QAAQ,OAAQ,EAAE,EAAE,QAAQ,QAAS,EAAE,EAAE,QAAQ,YAAa,GAAG,EACvFN,EAAoB,EAAIM,C,mmCCjBXI,EAAc,gCACdC,EAAmB,qCACnBC,EAAoB,sCACpBC,EAAoB,sCAEjC,GAAe,CACb,YAAAH,EACA,iBAAAC,EACA,kBAAAC,EACA,kBAAAC,CACF,ECPaC,GAA4B,CACrC,OAAQD,EACR,KAAM,eACN,OAAQ,IACR,QAAS,EACT,OAAQ,GACR,WAAY,GACZ,iBAAkB,GACtB,EAEaE,EAA4B,CACrC,OAAQH,EACR,KAAM,eACN,OAAQ,GACR,QAAS,EACT,OAAQ,EACR,WAAY,GACZ,iBAAkB,GACtB,EAEaI,EAA2B,CACpC,OAAQL,EACR,KAAM,cACN,OAAQ,GACR,QAAS,EACT,OAAQ,EACR,WAAY,GACZ,iBAAkB,EACtB,EAEaM,EAA2B,CACpC,OAAQP,EACR,KAAM,cACN,OAAQ,GACR,QAAS,EACT,OAAQ,EACR,WAAY,EACZ,iBAAkB,EACtB,EC1Ce,MAAMQ,CAAQ,CAO3B,YAAYC,EAAa,CACrB,KAAK,IAAMA,EACX,KAAK,IACL,KAAK,YAAc,KAAK,IAAI,EAC5B,KAAK,SAAW,IAAO,KAAK,IAC5B,KAAK,KACT,CAEA,YAAa,CACX,YAAK,IAAM,KAAK,IAAI,EACpB,KAAK,MAAQ,KAAK,IAAM,KAAK,YAEtB,KAAK,MAAQ,KAAK,QAC3B,CAEA,mBAAoB,CAClB,KAAK,YAAc,KAAK,IAAO,KAAK,MAAQ,KAAK,QACnD,CAEF,CClBA,QAAe,CACb,YALuB,CACvB,GAAI,MACN,CAIA,ECNMC,EAAU,IAAIF,EAAQ,EAAE,EAEjBG,EAAWC,GAAmC,CACvD,EAAY,YAAY,GAAK,sBAAsB,IAAM,CACrDD,EAAQC,CAAc,CAC1B,CAAC,EAEGF,EAAQ,WAAW,IACnBA,EAAQ,kBAAkB,EACtBE,EAAe,OAAO,SAAS,aAAe,EAC9CA,EAAe,OAAO,SAAS,uBAAuBA,EAAe,MAAM,GAE3EA,EAAe,OAAO,SAAS,uBAAuB,EACtDA,EAAe,UAAU,KAAKA,EAAe,MAAM,EACnDA,EAAe,OAAO,OAAO,GAIzC,ECfaC,GAAc,CAACC,EAAwBC,EAAiBC,EAAiBC,IAA0B,CAC5G,MAAMC,EAAgBJ,EAAO,GAAMC,EAAUE,GAAkBH,EAAO,GAAKC,EACrEI,EAAgBL,EAAO,GAAME,EAAUC,GAAkBH,EAAO,GAAKE,EAE3E,OAAOE,GAAiBC,CAC5B,EAEaC,GAAiC,CAACC,EAAcC,EAAcC,EAAcC,IAAiB,CAEtG,IAAIC,EAAYJ,EAAOE,EACnBG,EAAYJ,EAAOE,EAEvB,OAAO,KAAK,KAAK,KAAK,IAAIC,EAAW,CAAC,EAAI,KAAK,IAAIC,EAAW,CAAC,CAAC,CACpE,EAEaC,EAAiC,CAACC,EAAgBC,EAAiCC,IAA+B,CAC3H,QAAS/B,EAAI,EAAGA,EAAI8B,EAAe,OAAQ9B,IAAK,CAC5C,MAAMgC,EAAgBF,EAAe9B,CAAC,EAChC,CAAE,UAAAiC,EAAW,UAAAC,EAAW,UAAAC,CAAW,EAAIH,EAEzClB,GAAYe,EAAQK,EAAWC,EAAWN,EAAO,IAAI,IAErD,qBAAqBE,CAAkB,EACvCF,EAAO,qBAAqBG,EAAc,QAASA,EAAc,OAAO,EACxEpB,EAAQ,CAAE,OAAAiB,EAAQ,UAAAI,CAAU,CAAC,EAErC,CACJ,EAEaG,EAAoB,CAACC,EAAsBC,IAA6B,CACjF,QAAS,EAAI,EAAG,EAAIA,EAAS,OAAQ,IACjCD,EAAa,KAAKC,EAAS,CAAC,EAAE,EAAGA,EAAS,CAAC,EAAE,CAAC,CAEtD,ECvCe,MAAMC,EAAW,CAM9B,YAAYC,EAAkBC,EAAeC,EAAgB,CAC3D,KAAK,MAAQD,EACb,KAAK,OAASC,EACd,KAAK,OAAS,SAAS,eAAeF,CAAQ,EAC9C,KAAK,QAAU,KAAK,OAAO,WAAW,IAAI,EAE1C,KAAK,OAAO,aAAa,QAAS,KAAK,MAAM,SAAS,CAAC,EACvD,KAAK,OAAO,aAAa,SAAU,KAAK,OAAO,SAAS,CAAC,EACzD,KAAK,OAAO,aAAa,QAAS,UAAU,KAAK,KAAK,eAAe,KAAK,MAAM,KAAK,CACvF,CAEF,CChBA,MAAMG,GAAqB,IAAM,CAC7B,MAAMC,EAAU,SAAS,cAAc,QAAQ,EAC/C,OAAAA,EAAQ,GAAK,aACbA,EAAQ,MAAQ,IAChBA,EAAQ,OAAS,IAEVA,CACX,EAEA,SAAS,eAAe,gBAAgB,EAAE,YAAYD,GAAmB,CAAC,EAG1E,QADmB,IAAIJ,GAAW,aAAc,IAAK,GAAG,ECb3CM,GAAU,GACVC,GAAU,GACVC,GAAa,GCDX,MAAMC,EAAQ,CAK3B,YAAYC,EAAgBC,EAAuBC,EAAuB,CACxE,KAAK,MAAQF,EACb,KAAK,aAAeC,EACpB,KAAK,aAAeC,CACtB,CAEF,CCXO,MAAMC,GAAuB,GCDpC,SAASC,GAAKC,EAAeC,EAAkB,CAC3C,IAAIC,EAAIF,EAAQC,EACZE,EAAI,KAAK,MAAMH,EAAQC,CAAQ,EAEnC,MAAM,CAACC,EAAEC,CAAC,CACd,CACA,SAASC,GAAKF,EAAWC,EAAWF,EAAkB,CAClD,OAAOE,EAAIF,EAAWC,CAC1B,CAEA,SAAe,CACb,KAAM,CAACF,EAAYC,IACVF,GAAKC,EAAOC,CAAQ,EAE7B,KAAM,CAACC,EAAQC,EAAQF,IACdG,GAAKF,EAAGC,EAAGF,CAAQ,CAG9B,ECVA,IAAII,EAAe,EACfC,EAA+B,CAAC,EAE7B,SAASC,GAAcC,EAAiC,CAC9D,IAAIC,EAAcD,EAAiB,YACnC,MAAME,EAAc,GAEpB,GAAID,IAAgB,OAAW,CAC9B,EAAW,QAAQ,UAAUD,EAAiB,OAAQA,EAAiB,EAAGA,EAAiB,EAAGjB,GAASC,EAAO,EAC9G,MACD,CAEA,GAAIiB,EAAY,QAAU,MAAaA,EAAY,OAAS,EAAG,CAC1DH,EAAkBD,CAAY,EAAE,SAAW,IAE9CC,EAAkBD,CAAY,EAAE,MAAQK,EACxCJ,EAAkBD,CAAY,EAAE,eAE5BC,EAAkBD,CAAY,EAAE,cAAgBI,EAAY,SAE9DH,EAAkBD,CAAY,EAAE,aAAe,GACjDC,EAAkBD,CAAY,EAAE,aAAeI,EAAYH,EAAkBD,CAAY,EAAE,YAAY,GAGxG,IAAIM,EAAMC,GAAQ,KAAKN,EAAkBD,CAAY,EAAE,aAAc,CAAC,EACtE,EAAW,QAAQ,UAAUG,EAAiB,OAAQG,EAAI,CAAC,EAAE,GAAIA,EAAI,CAAC,EAAE,GAAI,GAAI,GAAIH,EAAiB,EAAGA,EAAiB,EAAG,GAAI,EAAE,EAElIH,GACD,CAED,CAEO,SAASQ,IAA8B,CAC7C,QAASnE,EAAI,EAAGA,EAAIoD,GAAsBpD,IACzC4D,EAAkB5D,CAAC,EAAI,IAAIgD,GAAQ,EAAE,EAAE,CAAC,CAE1C,CAEO,SAASoB,GAAwB,CACvCT,EAAe,CAChB,CC5Ce,MAAMU,CAAO,CAW1B,YAAYC,EAAkB,CAC5B,KAAK,SAAWA,EAEhB,KAAK,WAAa,KAAK,GAAK,IAC5B,KAAK,MAAQ,KAEb,KAAK,WAAa,GAClB,KAAK,QAAU,KACf,KAAK,gBAAkB,EACvB,KAAK,KAAO,SAASC,EAAU,CAC7B,YAAK,MAAQ,IAAI,MACjB,KAAK,MAAM,IAAMA,EAAiB,IACpC,EAEA,KAAK,WAAa,SAASC,EAAS,CAClC,KAAK,gBAAkBA,EACvB,KAAK,QAAU,EAAW,QAAQ,cAAc,KAAK,MAAO,QAAQ,EACpE,KAAK,WAAa,EACpB,EAEA,KAAK,YAAc,KAEf,KAAK,SACP,KAAK,KAAK,KAAK,QAAQ,EAEvB,QAAQ,IAAI,mCAAmCF,CAAQ,iBAAiB,CAG5E,CAEA,KAAKd,EAAWC,EAAWgB,EAAoB,CAC7C,MAAMC,EAAmC,CACvC,EAAAlB,EACA,EAAAC,EACA,YAAagB,EACb,OAAQ,KAAK,KACf,EAEAZ,GAAca,CAAiB,CAEjC,CAGF,CCxDO,MAAMC,EAAe,IAAIN,EAAO,0BAA0B,EACpDO,EAAe,IAAIP,EAAO,0BAA0B,EACpDQ,EAAgB,IAAIR,EAAO,oBAAoB,EAE5D,GAAe,CACb,aAAAM,EACA,aAAAC,EACA,cAAAC,CACF,ECRaC,EAAa,IAAIT,EAAO,yBAAyB,EACjDU,GAAO,IAAIV,EAAO,oBAAoB,EAEnD,EAAe,CACb,WAAAS,EACA,KAAAC,EACF,ECNaC,GAAkB,IAAIX,EAAO,6BAA6B,EAC1DY,GAAmB,IAAIZ,EAAO,8BAA8B,EAC5Da,GAAkB,IAAIb,EAAO,iCAAiC,EAC9Dc,GAAmB,IAAId,EAAO,6BAA6B,EAC3De,GAAc,IAAIf,EAAO,yBAAyB,EAClDgB,GAAsB,IAAIhB,EAAO,iCAAiC,EAClEiB,GAAiB,IAAIjB,EAAO,4BAA4B,EACxDkB,GAAyB,IAAIlB,EAAO,oCAAoC,EACxEmB,GAAwB,IAAInB,EAAO,mCAAmC,EACtEoB,GAAqB,IAAIpB,EAAO,gCAAgC,EAChEqB,GAA4B,IAAIrB,EAAO,sCAAsC,EAC7EsB,GAAuB,IAAItB,EAAO,kCAAkC,EACpEuB,GAAqB,IAAIvB,EAAO,+BAA+B,EAC/DwB,GAA2B,IAAIxB,EAAO,qCAAqC,EAExF,GAAe,CACX,mBAAAuB,GACA,YAAAR,GACA,iBAAAH,GACA,gBAAAD,GACA,gBAAAE,GACA,iBAAAC,GACA,oBAAAE,GACA,uBAAAE,GACA,sBAAAC,GACA,mBAAAC,GACA,0BAAAC,GACA,qBAAAC,GACA,yBAAAE,GACA,eAAAP,EACJ,E,oVC1BO,MAAMQ,EAA2B,EAE3BC,EAA6C,CACtD,WAAU,EACV,aAAY,CAChB,EAEaC,EAAsC,IAC/C,cAAa,EACb,aAAY,CAAZ,EACGC,EAAa,ECXPC,GAA8B,CAACC,EAA2BC,IAAsB,CACzF,KAAM,CAAC,EAAA5C,EAAG,EAAAC,CAAC,EAAI4C,EAAmBF,EAAQC,CAAK,EAE/C,QAAQ,IAAI,CAAC,EAAA5C,EAAM,EAAAC,CAAI,CAAC,CAC5B,EAEa4C,EAAqB,CAACF,EAA2BC,IAA8C,CACxG,MAAME,EAAgBH,EAAO,sBAAsB,EAC7C3C,EAAY,KAAK,KAAK4C,EAAM,EAAIE,EAAK,IAAI,EACzC7C,EAAY,KAAK,KAAK2C,EAAM,EAAIE,EAAK,GAAG,EAE9C,MAAO,CAAC,EAAA9C,EAAG,EAAAC,CAAC,CAChB,ECda8C,GAAc,CAAC1E,EAAgB2E,IAAiB,CACrD,CAACA,EAAM,YAAc,CAAC3E,EAAO,gBAC7BA,EAAO,WAAa,GACpBA,EAAO,cAAgB,GACvBA,EAAO,kBAAoB,GAEnC,ECJa4E,GAAuB,CAAC5E,EAAgB2E,EAAcL,EAA2BC,IAAsB,CAChH,KAAM,CAAE,EAAA5C,EAAG,EAAAC,CAAE,EAAI4C,EAAmBF,EAAQC,CAAK,EAEjD,OAAIvE,EAAO,UAAY2B,EAAI,KAAOC,EAAI,KAAOD,EAAI,KAAOC,EAAI,KACxD8C,GAAY1E,EAAQ2E,CAAK,EAGtB,CAAE,EAAAhD,EAAM,EAAAC,CAAK,CACxB,ECRO,MAAMiD,EAAmB,CAK5B,YAAYC,EAAiBC,EAAe,CAF5C,KAAQ,OAA4B,EAAW,OAO/C,6BAA0B,IAAM,KAAK,OAAO,iBAAiB,YAAa,KAAK,kBAAkB,EACjG,gCAA6B,IAAM,KAAK,OAAO,oBAAoB,YAAa,KAAK,kBAAkB,EAEvG,wBAAsBR,GAAsBK,GAAqB,KAAK,OAAQ,KAAK,MAAO,KAAK,OAAQL,CAAK,EAPxG,KAAK,OAASO,EACd,KAAK,MAAQC,CACjB,CAMJ,CChBO,SAASC,GAAoBC,EAAmCC,EAAsB,CAC5FD,EAAQ,UAAU,EAClBA,EAAQ,UAAY,0BACpBA,EAAQ,KAAK,EACbA,EAAQ,SAAS,IAAK,GAAI,IAAK,EAAE,EACjCA,EAAQ,UAAU,EAElBA,EAAQ,KAAO,mBACf,OAAO,OAAS,MAAMA,EAAQ,KAAO,oBAErCA,EAAQ,YAAc,QACtBA,EAAQ,WAAa,EACrBA,EAAQ,UAAY,EACpBA,EAAQ,WAAW,SAAU,IAAK,EAAE,EACpCA,EAAQ,WAAW,OAAOC,EAAa,MAAM,IAAIA,EAAa,SAAS,GAAI,IAAK,EAAE,EAClFD,EAAQ,WAAa,EAErBA,EAAQ,UAAY,QAChBC,EAAa,OAASA,EAAa,UAAY,IAClDD,EAAQ,UAAY,WAGrBA,EAAQ,SAAS,SAAU,IAAK,EAAE,EAClCA,EAAQ,SAAS,OAAOC,EAAa,MAAM,IAAIA,EAAa,SAAS,GAAI,IAAK,EAAE,EAChFD,EAAQ,KAAK,CACd,CAEO,SAASE,GAAmBF,EAAmCG,EAAoB,CACzFH,EAAQ,UAAU,EAClBA,EAAQ,UAAY,uBACpBA,EAAQ,KAAK,EACbA,EAAQ,SAAS,IAAK,GAAI,IAAK,EAAE,EACjCA,EAAQ,UAAU,EAElBA,EAAQ,KAAO,mBACf,OAAO,OAAS,MAAMA,EAAQ,KAAO,oBACrCA,EAAQ,YAAa,QACrBA,EAAQ,WAAY,EACpBA,EAAQ,UAAW,EACnBA,EAAQ,WAAYG,EAAY,KAAM,IAAK,EAAE,EAC7CH,EAAQ,WAAW,OAAOG,EAAY,MAAM,IAAIA,EAAY,WAAW,GAAI,IAAK,EAAE,EAElFH,EAAQ,WAAY,EACpBA,EAAQ,UAAY,QACpBA,EAAQ,SAASG,EAAY,KAAM,IAAK,EAAE,EAEtCA,EAAY,OAASA,EAAY,YAAc,IAClDH,EAAQ,UAAY,WAGrBA,EAAQ,SAAS,OAAOG,EAAY,MAAM,IAAIA,EAAY,WAAW,GAAI,IAAK,EAAE,CACjF,CAEO,SAASC,GAAiBJ,EAAmCC,EAAsB,CACzFD,EAAQ,UAAU,EAClBA,EAAQ,UAAY,uBACpBA,EAAQ,KAAK,EACbA,EAAQ,SAAS,IAAK,IAAK,IAAK,GAAG,EACnCA,EAAQ,UAAU,EAElBA,EAAQ,KAAO,mBAEf,OAAO,OAAS,MAAMA,EAAQ,KAAO,oBACrCA,EAAQ,YAAa,QACrBA,EAAQ,WAAY,EACpBA,EAAQ,UAAW,EACnBA,EAAQ,WAAW,UAAW,IAAK,GAAG,EACtCA,EAAQ,WAAW,UAAW,IAAK,GAAG,EACtCA,EAAQ,WAAW,SAAU,IAAK,GAAG,EAErCA,EAAQ,WAAY,EACpBA,EAAQ,UAAY,OACpBA,EAAQ,SAAS,UAAW,IAAK,GAAG,EACpCA,EAAQ,SAAS,UAAW,IAAK,GAAG,EAEpCA,EAAQ,UAAY,QAChBC,EAAa,gBACjBD,EAAQ,UAAY,QAEpBA,EAAQ,SAAS,SAAU,IAAK,GAAG,CACpC,CAEO,SAASK,GAAkBL,EAAmCG,EAAoB,CACxFH,EAAQ,UAAU,EAClBA,EAAQ,UAAY,uBACpBA,EAAQ,KAAK,EACbA,EAAQ,SAAS,IAAK,IAAK,IAAK,EAAE,EAClCA,EAAQ,UAAU,EAElBA,EAAQ,KAAO,mBACf,OAAO,OAAS,MAAMA,EAAQ,KAAO,oBACrCA,EAAQ,YAAc,QACtBA,EAAQ,WAAa,EACrBA,EAAQ,UAAY,EACpBA,EAAQ,WAAW,GAAGG,EAAY,IAAI,UAAW,IAAK,GAAG,EACzDH,EAAQ,WAAW,IAAIG,EAAY,UAAU,cAAe,IAAK,GAAG,EACpEH,EAAQ,WAAW,IAAIG,EAAY,gBAAgB,cAAe,IAAK,GAAG,EAE1EH,EAAQ,WAAa,EACrBA,EAAQ,UAAY,QACpBA,EAAQ,SAAS,GAAGG,EAAY,IAAI,UAAW,IAAK,GAAG,EACvDH,EAAQ,SAAS,IAAIG,EAAY,UAAU,cAAe,IAAK,GAAG,EAClEH,EAAQ,SAAS,IAAIG,EAAY,gBAAgB,cAAe,IAAK,GAAG,CACzE,CAEO,SAASG,GAAeN,EAAmCC,EAAsB,CACvFD,EAAQ,UAAU,EAClBA,EAAQ,UAAY,0BACpBA,EAAQ,KAAK,EACbA,EAAQ,SAAS,IAAK,IAAK,IAAK,EAAE,EAClCA,EAAQ,UAAU,EAElBA,EAAQ,KAAO,mBACf,OAAO,OAAS,MAAMA,EAAQ,KAAO,oBACrCA,EAAQ,YAAc,QACtBA,EAAQ,WAAa,EACrBA,EAAQ,UAAY,EACpBA,EAAQ,WAAW,iBAAiBC,EAAa,KAAK,IAAK,IAAK,GAAG,EAEnED,EAAQ,WAAa,EACrBA,EAAQ,UAAY,QACpBA,EAAQ,SAAS,iBAAiBC,EAAa,KAAK,IAAK,IAAK,GAAG,CAClE,CAEO,SAASM,GAAkBP,EAAmC,CACpEA,EAAQ,UAAU,EAClBA,EAAQ,UAAY,0BACpBA,EAAQ,KAAK,EACbA,EAAQ,SAAS,IAAK,IAAK,IAAK,EAAE,EAClCA,EAAQ,UAAU,EAElBA,EAAQ,KAAO,mBACf,OAAO,OAAS,MAAMA,EAAQ,KAAO,oBACrCA,EAAQ,YAAc,QACtBA,EAAQ,WAAa,EACrBA,EAAQ,UAAY,EACpBA,EAAQ,WAAW,6BAA8B,IAAK,GAAG,EAEzDA,EAAQ,WAAa,EACrBA,EAAQ,UAAY,QACpBA,EAAQ,SAAS,6BAA8B,IAAK,GAAG,CACxD,CC7Ie,MAAMQ,CAAM,CAOzB,YAAYC,EAAoBC,EAAc3F,EAAgB,CAC5D,KAAK,OAAS0F,EACd,KAAK,QAAUC,EACf,KAAK,OAAS3F,EACd,KAAK,QAAU,GACf,KAAK,QAAU,EACjB,CAEA,WAAWlC,EAAkE8H,EAAoBC,EAAeC,EAAe,CAC7H,IAAIC,EAAa,OAAO,KAAKjI,CAAG,EAEhCA,EAAIiI,EAAWH,CAAa,CAAC,EAAE,KAAKC,EAAOC,CAAK,CAClD,CAEA,cAAcE,EAA0B,CAEtC,GAAIA,EAAY,WAAaA,EAAY,iBAAkB,CAEzD,GAAIA,EAAY,MAAQ,GAAK,KAAK,OAAO,EAAG,CAC1C,KAAK,OAAO,GAAK,EACjB,MACF,CAEA,GAAIA,EAAY,MAAQ,GAAK,KAAK,OAAO,EAAG,CAC1C,KAAK,OAAO,GAAK,EACjB,MACF,CAEA,GAAIA,EAAY,MAAQ,GAAK,KAAK,OAAO,EAAG,CAC1C,KAAK,OAAO,GAAK,EACjB,MACF,CAEA,GAAIA,EAAY,MAAQ,GAAK,KAAK,OAAO,EAAG,CAC1C,KAAK,OAAO,GAAK,EACjB,MACF,CAEF,CAEF,CAEA,UAAUC,EAA0B,CAChC,IAAIC,EAAW,EAEf,QAAStE,EAAI,EAAGA,EAAI,GAAIA,IAEpB,QAASD,EAAI,EAAGA,EAAI,GAAIA,IAAKuE,IAAY,CACrC,IAAIC,EAAQxE,EAAI,KAAK,QACjByE,EAAQxE,EAAI,KAAK,QACjByE,EAAY,KAAK,OAAOH,CAAQ,EAGhCF,GAA2B,CAC7B,MAAAG,EACA,MAAAC,EACA,UAAAC,EACA,iBAAAJ,CACF,EAGI,KAAK,OAAO,QACd,KAAK,OAAO,EAAI,GAAKE,GACrB,KAAK,OAAO,EAAI,GAAKA,GACrB,KAAK,OAAO,EAAI,GAAKC,GACrB,KAAK,OAAO,EAAI,GAAKA,GAEnB,KAAK,cAAcJ,EAAW,EAGpC,KAAK,WAAW,KAAK,QAASK,EAAWF,EAAOC,CAAK,CACvD,CAIR,CAEF,CCnFO,MAAME,GAAyB,CAAChC,EAA2BC,IAAsB,CACpF,KAAM,CAAE,EAAA5C,EAAG,EAAAC,CAAE,EAAI4C,EAAmBF,EAAQC,CAAK,EAE7C5C,EAAI,KAAOC,EAAI,KAAOD,EAAI,KAAOC,EAAI,MACrC2E,GAA6B,EAC7BC,EAAU,EAElB,ECRMC,EAAwBlC,GAAsB,CAChD+B,GAAuB,EAAW,OAAQ/B,CAAK,CACnD,EAEamC,EAA4B,IAAM,EAAW,OAAO,iBAAiB,YAAaD,CAAoB,EACtGF,GAA+B,IAAM,EAAW,OAAO,oBAAoB,YAAaE,CAAoB,ECRlH,SAASE,GAAgB1B,EAAmC,CAC/DA,EAAQ,UAAU,EAClBA,EAAQ,UAAY,wBACpBA,EAAQ,KAAK,EACbA,EAAQ,SAAS,EAAG,EAAGA,EAAQ,OAAO,YAAaA,EAAQ,OAAO,YAAY,EAC9EA,EAAQ,UAAU,EAElBA,EAAQ,YAAc,QACtBA,EAAQ,WAAa,EACrBA,EAAQ,UAAY,EAEpBA,EAAQ,KAAO,kBACfA,EAAQ,WAAW,cAAe,IAAK,GAAG,EAC1CA,EAAQ,WAAa,EAErBA,EAAQ,KAAO,oBACfA,EAAQ,UAAY,sBACpBA,EAAQ,SAAS,qBAAsB,IAAK,EAAE,EAE9CA,EAAQ,UAAY,QACpBA,EAAQ,KAAO,kBACfA,EAAQ,SAAS,cAAe,IAAK,GAAG,EACxCA,EAAQ,KAAK,CACjB,CCvBO,SAAS2B,GAAgB3B,EAAmC,CAC/DA,EAAQ,UAAU,EAClBA,EAAQ,UAAY,sBACpBA,EAAQ,KAAK,EACbA,EAAQ,SAAS,EAAG,EAAGA,EAAQ,OAAO,YAAaA,EAAQ,OAAO,YAAY,EAC9EA,EAAQ,UAAU,EAGlBA,EAAQ,YAAc,QACtBA,EAAQ,WAAa,EACrBA,EAAQ,UAAY,EACpBA,EAAQ,KAAO,kBACfA,EAAQ,WAAW,iBAAkB,IAAK,EAAE,EAE5CA,EAAQ,KAAO,kBACfA,EAAQ,WAAW,cAAe,IAAK,GAAG,EAC1CA,EAAQ,WAAa,EAGrBA,EAAQ,KAAO,kBACfA,EAAQ,UAAY,UACpBA,EAAQ,SAAS,iBAAkB,IAAK,EAAE,EAE1CA,EAAQ,UAAY,QACpBA,EAAQ,KAAO,kBACfA,EAAQ,SAAS,cAAe,IAAK,GAAG,EACxCA,EAAQ,KAAK,CACjB,CC3BO,MAAM4B,GAAY,CACrB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,ECE7B,MAAMC,EAAa,CAOhC,YAAYC,EAA6BC,EAAyC,CANlF,KAAiB,QAAU,IAAIpI,EAAQ,EAAE,EACzC,KAAQ,cAAyB,GACjC,KAAQ,YAAuB,GAC/B,KAAQ,mBAA6B,EAInC,KAAK,mBAAqBmI,EAC1B,KAAK,mBAAqBC,EAE1B,KAAK,mBAAmB,wBAAwB,CAClD,CAEO,KAAKhH,EAAgB2E,EAAcsC,EAAiC,CACzE,MAAMC,EAAY,KAElB,EAAY,YAAY,GAAK,sBAAsB,IAAM,CACrDA,EAAU,KAAKlH,EAAQ2E,EAAOsC,CAAe,CACjD,CAAC,EAEG,KAAK,QAAQ,WAAW,IAC1B,KAAK,QAAQ,kBAAkB,EAEb,IAAIxB,EAAMoB,GAAWI,EAAgB,iBAAkBjH,CAAM,EACnE,UAAU,EAAE,EAExBqF,GAAiB,EAAW,QAASrF,CAAM,EAC3CgF,GAAoB,EAAW,QAAShF,CAAM,EAC9CmF,GAAmB,EAAW,QAASR,CAAK,EAE5C3E,EAAO,OAAO,EACd2E,EAAM,OAAO,EAEb3E,EAAO,oBAAoBA,EAAQ2E,CAAK,EACxCA,EAAM,oBAAoBA,EAAO3E,CAAM,EAEnCA,EAAO,SACT,KAAK,oBAAoBA,EAAQ2E,EAAOsC,CAAe,EAGrDjH,EAAO,MACT,KAAK,mBAAmBA,CAAM,EAGhCuC,EAAsB,EAE1B,CAEQ,oBAAoBvC,EAAgB2E,EAAcwC,EAAmC,CAC3F7B,GAAkB,EAAW,QAASX,CAAK,EAEvC,KAAK,qBAAuB3E,EAAO,OACrCuF,GAAe,EAAW,QAASvF,CAAM,EAGtC,KAAK,gBACR,KAAK,cAAgB,GACrBA,EAAO,iBAAiB2E,CAAK,EAE7B,WAAW,IAAM,CACf,KAAK,gBAAgB,EAEjBA,EAAM,SACR3E,EAAO,SAAS,qBAAqB,EACrC0G,EAA0B,EAC1BC,GAAgB,EAAW,OAAO,IAElC3G,EAAO,oBAAoB2E,CAAK,EAChC5F,EAAQ,CAAE,OAAAiB,EAAgB,UAAWmH,CAAY,CAAC,EAEtD,EAAG,GAAI,EAEX,CAEQ,mBAAmBnH,EAAsB,CAC/CwF,GAAkB,EAAW,OAAO,EAE/B,KAAK,cACR,KAAK,YAAc,GAEnB,WAAW,IAAM,CACfxF,EAAO,SAAS,qBAAqB,EACrC,KAAK,gBAAgB,EACrB0G,EAA0B,EAC1BE,GAAgB,EAAW,OAAO,CACpC,EAAG,GAAI,EAEX,CAEQ,iBAAkB,CACxB,KAAK,mBAAmB,2BAA2B,EACnD,qBAAqB,EAAY,YAAY,EAAE,CACjD,CAEF,CC3GA,QAAe,CACb,kBAJ+B,IAAIpE,EAAO,sCAAsC,EAKhF,aAJ0B,mCAK5B,ECSe,MAAM4E,CAAgC,CA6BnD,YAAYtJ,EAAUuJ,EAAYC,EAAY,CAC5C,KAAK,YAAc,IAAI9E,EAAO1E,EAAI,MAAM,EACxC,KAAK,OAASA,EAAI,OAClB,KAAK,KAAOA,EAAI,KAChB,KAAK,YAAcA,EAAI,OACvB,KAAK,QAAUA,EAAI,QACnB,KAAK,OAASA,EAAI,OAClB,KAAK,WAAaA,EAAI,WACtB,KAAK,iBAAmBA,EAAI,iBAC5B,KAAK,UAAY,CAAC,EAAG,EAAG,CAAC,EACzB,KAAK,OAASuJ,EACd,KAAK,OAASC,EACd,KAAK,UAAY,GACjB,KAAK,EAAID,EACT,KAAK,EAAIC,EACT,KAAK,SAAW,GAChB,KAAK,kBAAoB,GACzB,KAAK,mBAAqB,GAC1B,KAAK,WAAa,GAClB,KAAK,KAAO,EACd,CAEA,QAAQtH,EAAgBuH,EAAYC,EAAqC,CACnE,KAAK,OAET,KAAK,OAAO,EAER,KAAK,QAAQ,KAAK,OAAOA,EAAY,OAAO,OAAQA,EAAY,OAAO,MAAM,EAEjF,KAAK,YAAYxH,EAAQuH,CAAK,EAChC,CAEA,QAAS,CACP,KAAK,YAAY,MAAM,MAAQ,GAC/B,KAAK,YAAY,MAAM,OAAS,GAChC,KAAK,YAAY,KAAK,KAAK,EAAG,KAAK,EAAG,KAAK,SAAS,CACtD,CAEA,YAAYvH,EAAgByH,EAAmC,CAE7D,GAAIjI,GAA+B,KAAK,EAAG,KAAK,EAAGQ,EAAO,EAAGA,EAAO,CAAC,GAAK,GAAI,CAC5E,MAAM0H,EAAqB,IAAI7C,GAAmB7E,EAAQ,IAAI,EACxD2H,EAAe,IAAIb,GAAa9G,EAAO,MAAO0H,CAAkB,EAEtE,qBAAqB,EAAY,YAAY,EAAE,EAE/C1H,EAAO,SAAW,GAClBA,EAAO,UAAY,CAAC,EAAE,EAAE,CAAC,EACzBA,EAAO,EAAI,IACXA,EAAO,EAAI,IAEX,KAAK,OAAS,KAAK,EACnB,KAAK,OAAS,KAAK,EACnB,KAAK,EAAI,IACT,KAAK,EAAI,IACT,KAAK,UAAY,CAAC,EAAE,EAAE,CAAC,EAEvB2H,EAAa,KAAK3H,EAAQ,KAAMyH,CAAiB,CAEnD,CAEF,CAEA,oBAAoB9C,EAAc3E,EAAgB,CAChD,GAAI2E,EAAM,YAAc,CAAC3E,EAAO,KAAM,CACpC,GAAI,CAAC2E,EAAM,oBACTA,EAAM,mBACNA,EAAM,GAAK,MAEXA,EAAM,GAAK,EAEPA,EAAM,EAAI,KACZ,oBAAgC,KAAK3E,EAAO,EAAGA,EAAO,EAAG,CAAC,EAAG,EAAG,CAAC,CAAC,EAGhE2E,EAAM,IAAM,MACd3E,EAAO,OAAS,KAAK,IAAIA,EAAO,OAAU2E,EAAM,OAAS,EAAI,CAAC,EAE9D,WAAW,IAAM,CACfA,EAAM,kBAAoB,GAC1BA,EAAM,mBAAqB,EAC7B,EAAG,GAAG,EAEF3E,EAAO,QAAU,IAAG,CACtBA,EAAO,KAAO,GACdA,EAAO,UAAY,CAAC,EAAG,EAAG,CAAC,EAC3B,MACF,CAIA,CAAC2E,EAAM,mBACTA,EAAM,oBACNA,EAAM,GAAK,MACXA,EAAM,GAAK,EAEPA,EAAM,IAAM,MACdA,EAAM,WAAa,GACnBA,EAAM,mBAAqB,GAC3B3E,EAAO,cAAgB,IAI7B,CACF,CAEF,CCxJA,QAAgB4H,IAA0B,CAExC,OAAQ,CAACC,EAAcC,IAAuB,CAExCD,GAEFE,EAAkB,CAChB,OAAQH,EACR,iBAAkBA,EAAgB,EAClC,sBAAuBA,EAAgB,OACvC,mBAAoBC,EACpB,qBAAsB,GACxB,CAAC,EAGCC,GAEFC,EAAkB,CAChB,OAAQH,EACR,iBAAkBA,EAAgB,EAClC,sBAAuBA,EAAgB,OACvC,mBAAoBE,EACpB,qBAAsB,GACxB,CAAC,CAIL,CAEF,GAEA,SAASE,GAAgBC,EAAuB,CAE1CA,EAAiB,mBAAqBA,EAAiB,qBACzDA,EAAiB,OAAO,UAAY,IAElCA,EAAiB,mBAAqBA,EAAiB,wBACzDA,EAAiB,OAAO,UAAY,GAGxC,CAEA,SAASF,EAAkBE,EAAuB,CAEhDD,GAAgBC,CAAgB,EAE5BA,EAAiB,OAAO,YAC1BA,EAAiB,mBAAqBA,EAAiB,uBAGrDA,EAAiB,iBAAmBA,EAAiB,qBACvDA,EAAiB,OAAOA,EAAiB,oBAAoB,GAAK,EAClEA,EAAiB,OAAO,UAAY,CAAC,EAAE,EAAE,CAAC,GAGxCA,EAAiB,iBAAmBA,EAAiB,qBACvDA,EAAiB,OAAOA,EAAiB,oBAAoB,GAAK,EAClEA,EAAiB,OAAO,UAAY,CAAC,EAAE,EAAE,CAAC,EAG9C,CCvCO,MAAMC,GAAW,CACpB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAC7C,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EACvC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACzC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACvC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACvC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,EAE/BC,GAAmB,CAC5B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACvC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EACzC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,EAE/BC,GAAmB,CAC5B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EACvC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EACvC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAA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E,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,EAE/BC,GAA2B,CACpC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtC,E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","sources":["webpack://Reaver/webpack/bootstrap","webpack://Reaver/webpack/runtime/define property getters","webpack://Reaver/webpack/runtime/global","webpack://Reaver/webpack/runtime/hasOwnProperty shorthand","webpack://Reaver/webpack/runtime/publicPath","webpack://Reaver/./game/entity/enemy_entities/enemy_sprites.ts","webpack://Reaver/./game/engine/enemy/enemies/enemy-database.ts","webpack://Reaver/./game/engine/fpslimiter.ts","webpack://Reaver/./game/engine/animation/animationframeid/animationid.ts","webpack://Reaver/./game/rungame.ts","webpack://Reaver/./game/engine/helpers/helpers.ts","webpack://Reaver/./game/engine/canvas/HTMLCanvas.ts","webpack://Reaver/./game/engine/canvas/game-canvas.ts","webpack://Reaver/./game/engine/settings/blocksize.ts","webpack://Reaver/./game/engine/animation/animate.ts","webpack://Reaver/./game/engine/settings/settings.ts","webpack://Reaver/./game/utility.ts","webpack://Reaver/./game/engine/animation/animationcounter.ts","webpack://Reaver/./game/entity/sprite.ts","webpack://Reaver/./game/entity/terrain_entities/terrain_sprites.ts","webpack://Reaver/./game/entity/miscellaneous_entities/misc_sprites.ts","webpack://Reaver/./game/entity/ridgearea_entities/ridge_sprites.ts","webpack://Reaver/./game/scenes/scene_sprites/ridge_map_sprites.ts","webpack://Reaver/./game/engine/cursor/CursorClickHelpers.ts","webpack://Reaver/./game/ui/playerBattleEvents.ts","webpack://Reaver/./game/engine/cursor/BattleEventClickLocations.ts","webpack://Reaver/./game/engine/eventlisteners/battleEventManager.ts","webpack://Reaver/./game/ui/playerBattleInterface.ts","webpack://Reaver/./game/scenes/scene.ts","webpack://Reaver/./game/engine/cursor/GameOverClickLocations.ts","webpack://Reaver/./game/engine/eventlisteners/gameover-event-listeners.ts","webpack://Reaver/./game/ui/beatGameInterface.ts","webpack://Reaver/./game/ui/gameOverInterface.ts","webpack://Reaver/./game/scenes/maps/misc_maps.ts","webpack://Reaver/./game/scenes/battlescreen.ts","webpack://Reaver/./game/entity/character_entities/character_sprites.ts","webpack://Reaver/./game/engine/enemy/enemy.ts","webpack://Reaver/./game/engine/enemy/composition/entitypatrol.ts","webpack://Reaver/./game/scenes/maps/ridge_maps.ts","webpack://Reaver/./game/scenes/ridgearea.ts","webpack://Reaver/./game/scenes/ridgeareaback.ts","webpack://Reaver/./game/scenes/ridgeareacave.ts","webpack://Reaver/./game/entity/cave_entities/cave_sprites.ts","webpack://Reaver/./game/scenes/scene_sprites/cave_map_sprites.ts","webpack://Reaver/./game/scenes/maps/cave_maps.ts","webpack://Reaver/./game/scenes/ridgeareacave_level1.ts","webpack://Reaver/./game/scenes/ridgeareacave_level2.ts","webpack://Reaver/./game/scenes/scenes.ts","webpack://Reaver/./game/engine/character/keyboard.ts","webpack://Reaver/./game/ui/playerPauseMenu.ts","webpack://Reaver/./game/engine/character/playerleveldictionary.ts","webpack://Reaver/./game/engine/character/player.ts","webpack://Reaver/./game/engine/eventlisteners/debug-event-listeners.ts","webpack://Reaver/./game/startgame/startgame.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","\r\nexport const slimeSprite = \"sprites/slime_spritesheet.png\";\r\nexport const slimeSuperSprite = \"sprites/slimeSuper_spritesheet.png\";\r\nexport const shadeWalkerSprite = \"sprites/shadewalker_Spritesheet.png\";\r\nexport const shadeKeeperSprite = \"sprites/shadeKeeper_Spritesheet.png\";\r\n\r\nexport default {\r\n  slimeSprite,\r\n  slimeSuperSprite,\r\n  shadeWalkerSprite,\r\n  shadeKeeperSprite\r\n}\r\n","import { shadeKeeperSprite, shadeWalkerSprite, slimeSprite, slimeSuperSprite } from \"../../../entity/enemy_entities/enemy_sprites\";\r\n\r\nimport { EnemyDetails } from \"../../interfaces/enemy-details\";\r\n\r\nexport const ShadeKeeper: EnemyDetails = {\r\n    sprite: shadeKeeperSprite,\r\n    name: 'Shade Keeper',\r\n    health: 155,\r\n    defense: 0,\r\n    damage: 13,\r\n    goldReward: 50,\r\n    experienceReward: 300,\r\n};\r\n\r\nexport const ShadeWalker: EnemyDetails = {\r\n    sprite: shadeWalkerSprite,\r\n    name: 'Shade Walker',\r\n    health: 90,\r\n    defense: 0,\r\n    damage: 9,\r\n    goldReward: 25,\r\n    experienceReward: 100,\r\n}\r\n\r\nexport const SlimeSuper: EnemyDetails = {\r\n    sprite: slimeSuperSprite,\r\n    name: 'Slime Super',\r\n    health: 80,\r\n    defense: 0,\r\n    damage: 7,\r\n    goldReward: 15,\r\n    experienceReward: 85,\r\n}\r\n\r\nexport const GreenSlime: EnemyDetails = {\r\n    sprite: slimeSprite,\r\n    name: 'Green Slime',\r\n    health: 35,\r\n    defense: 0,\r\n    damage: 3,\r\n    goldReward: 5,\r\n    experienceReward: 35,\r\n}","export default class Limiter {\r\n  fps: number;\r\n  now: any;\r\n  currentTime: number;\r\n  interval: number;\r\n  delta: any;\r\n\r\n  constructor(fps: number) {\r\n      this.fps = fps;\r\n      this.now;\r\n      this.currentTime = Date.now();\r\n      this.interval = 1000 / this.fps;\r\n      this.delta;\r\n  }\r\n\r\n  fpsLimiter() {\r\n    this.now = Date.now();\r\n    this.delta = this.now - this.currentTime;\r\n\r\n    return this.delta > this.interval;\r\n  }\r\n\r\n  updateCurrentTime() {\r\n    this.currentTime = this.now - (this.delta % this.interval);\r\n  }\r\n\r\n}\r\n","/**\r\n  Animation ID to manage current requestAnimationFrame\r\n*/\r\n\r\nconst animationID: any = {\r\n  id: undefined\r\n};\r\n\r\nexport default {\r\n  animationid: animationID\r\n};","import Limiter from './engine/fpslimiter';\r\nimport { RunGameOptions } from './engine/interfaces/run-game-options';\r\nimport animationID from './engine/animation/animationframeid/animationid';\r\n\r\nconst limiter = new Limiter(60);\r\n\r\nexport const RunGame = (runGameOptions: RunGameOptions) => {\r\n    animationID.animationid.id = requestAnimationFrame(() => {\r\n        RunGame(runGameOptions);\r\n    });\r\n\r\n    if (limiter.fpsLimiter()) {\r\n        limiter.updateCurrentTime();\r\n        if (runGameOptions.player.keyboard.escapeToggle > 0) {\r\n            runGameOptions.player.keyboard.checkToDisplayUserMenu(runGameOptions.player);\r\n        } else {\r\n            runGameOptions.player.keyboard.keyboardPlayerMovement();\r\n            runGameOptions.gameScene.draw(runGameOptions.player);\r\n            runGameOptions.player.render();\r\n        }\r\n    }\r\n\r\n}\r\n","import Enemy from \"../enemy/enemy\";\r\nimport Player from \"../character/player\";\r\nimport { RunGame } from \"../../rungame\";\r\nimport Sprite from \"../../entity/sprite\";\r\nimport { StaticEntity } from \"../interfaces/static-entity\";\r\nimport { TransferScene } from \"../interfaces/transfer-scene\";\r\n\r\nexport const isColliding = (entity: Player | Enemy, boundsX: number, boundsY: number, collisionSize: number) => {\r\n    const withinXBounds = entity.x >= (boundsX - collisionSize) && entity.x <= boundsX;\r\n    const withinYBounds = entity.y >= (boundsY - collisionSize) && entity.y <= boundsY;\r\n\r\n    return withinXBounds && withinYBounds;\r\n}\r\n\r\nexport const computeDistanceBetweenEntities = (xOne: number, yOne: number, xTwo: number, yTwo: number) => {\r\n\r\n    let xDistance = xOne - xTwo;\r\n    let yDistance = yOne - yTwo;\r\n\r\n    return Math.sqrt(Math.pow(xDistance, 2) + Math.pow(yDistance, 2));\r\n}\r\n\r\nexport const transferNewLocationOnCollision = (player: Player, transferScenes: TransferScene[], currentAnimationID: number) => {\r\n    for (let i = 0; i < transferScenes.length; i++) {\r\n        const transferScene = transferScenes[i];\r\n        const { gameScene, transferX, transferY, } = transferScene;\r\n\r\n        if (isColliding(player, transferX, transferY, player.size)) {\r\n\r\n            cancelAnimationFrame(currentAnimationID);\r\n            player.setPlayerCoordinates(transferScene.arriveX, transferScene.arriveY);\r\n            RunGame({ player, gameScene });\r\n        }\r\n    }\r\n}\r\n\r\nexport const renderMiscSprites = (staticSprite: Sprite, entities: StaticEntity[]) => {\r\n    for (let i = 0; i < entities.length; i++) {\r\n        staticSprite.draw(entities[i].x, entities[i].y);\r\n    }\r\n}","\r\nexport default class HTMLCanvas {\r\n  width: number;\r\n  height: number;\r\n  canvas: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n\r\n  constructor(canvasId: string, width: number, height: number) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.canvas = document.getElementById(canvasId) as HTMLCanvasElement;\r\n    this.context = this.canvas.getContext(\"2d\");\r\n\r\n    this.canvas.setAttribute('width', this.width.toString());\r\n    this.canvas.setAttribute('height', this.height.toString());\r\n    this.canvas.setAttribute('style', `width: ${this.width}px; height: ${this.height}px;`);\r\n  }\r\n\r\n}\r\n","import HTMLCanvas from './HTMLCanvas';\r\n\r\nconst generateHTMLCanvas = () => {\r\n    const element = document.createElement('canvas');\r\n    element.id = 'gameCanvas';\r\n    element.width = 640;\r\n    element.height = 480;\r\n\r\n    return element;\r\n};\r\n\r\ndocument.getElementById(\"game-container\").appendChild(generateHTMLCanvas());\r\n\r\nconst GameCanvas = new HTMLCanvas('gameCanvas', 640, 480);\r\nexport default GameCanvas;\r\n\r\n\r\n","export const BLOCK_W = 32;\r\nexport const BLOCK_H = 32;\r\nexport const BLOCK_SIZE = 32;","\r\nexport default class Animate {\r\n  delay: number;\r\n  indexCounter: number;\r\n  currentFrame: number;\r\n\r\n  constructor(_delay: number, _indexCounter: number, _currentFrame: number) {\r\n    this.delay = _delay;\r\n    this.indexCounter = _indexCounter;\r\n    this.currentFrame = _currentFrame;\r\n  }\r\n\r\n}\r\n","// Controls the amount of total animatable sprites that a scene can have\r\nexport const maxAnimatableSprites = 10;","function i2xy(index: number, mapWidth: number) {\r\n    var x = index % mapWidth;\r\n    var y = Math.floor(index / mapWidth);\r\n\r\n    return[x,y]\r\n};\r\nfunction xy2i(x: number, y: number, mapWidth: number) {\r\n    return y * mapWidth + x;\r\n}\r\n\r\nexport default {\r\n  i2xy: (index: any, mapWidth: any) => {\r\n    return i2xy(index, mapWidth);\r\n  },\r\n  xy2i: (x: any, y: any, mapWidth: any) => {\r\n    return xy2i(x, y, mapWidth);\r\n  }\r\n\r\n}\r\n","import { BLOCK_H, BLOCK_W } from '../settings/blocksize';\r\n\r\nimport Animate from './animate';\r\nimport GameCanvas from '../canvas/game-canvas';\r\nimport { SpriteDetails } from '../interfaces/sprite-details';\r\nimport { maxAnimatableSprites } from '../settings/settings';\r\nimport utility from '../../utility';\r\n\r\nlet counterIndex = 0;\r\nlet animatableSprites: Animate[] = [];\r\n\r\nexport function drawAnimation(animatableSprite: SpriteDetails) {\r\n\tlet spriteSheet = animatableSprite.spriteSheet;\r\n\tconst delayAmount = -2;\r\n\r\n\tif (spriteSheet === undefined) {\r\n\t\tGameCanvas.context.drawImage(animatableSprite.sprite, animatableSprite.x, animatableSprite.y, BLOCK_W, BLOCK_H);\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (spriteSheet.length != undefined && spriteSheet.length > 0) {\r\n\t\tif (animatableSprites[counterIndex].delay++ >= 3) {\r\n\r\n\t\t\tanimatableSprites[counterIndex].delay = delayAmount;\r\n\t\t\tanimatableSprites[counterIndex].indexCounter++;\r\n\r\n\t\t\tif (animatableSprites[counterIndex].indexCounter >= spriteSheet.length)\r\n\r\n\t\t\t\t\tanimatableSprites[counterIndex].indexCounter = 0;\r\n\t\t\tanimatableSprites[counterIndex].currentFrame = spriteSheet[animatableSprites[counterIndex].indexCounter];\r\n\t\t}\r\n\r\n\t\tvar res = utility.i2xy(animatableSprites[counterIndex].currentFrame, 3);\r\n\t\tGameCanvas.context.drawImage(animatableSprite.sprite, res[0]*32, res[1]*32, 32, 32, animatableSprite.x, animatableSprite.y, 32, 32);\r\n\r\n\t\tcounterIndex++;\r\n\t}\r\n\r\n}\r\n\r\nexport function initializeAnimationCounters() {\r\n\tfor (var i = 0; i < maxAnimatableSprites; i++) {\r\n\t\tanimatableSprites[i] = new Animate(0,0,0);\r\n\t}\r\n};\r\n\r\nexport function resetAnimationCounter() {\r\n\tcounterIndex = 0;\r\n}\r\n","import GameCanvas from '../engine/canvas/game-canvas';\r\nimport { SpriteDetails } from '../engine/interfaces/sprite-details';\r\nimport { drawAnimation } from '../engine/animation/animationcounter';\r\n\r\nexport default class Sprite {\r\n  image: HTMLImageElement;\r\n  filepath: string;\r\n  TO_RADIANS: number;\r\n  is_pattern: boolean;\r\n  pattern: CanvasPattern | null;\r\n  pattern_x_times: number;\r\n  load: (filename: any) => any;\r\n  to_pattern: (x_times: any) => void;\r\n  spritesheet: any;\r\n\r\n  constructor(filepath: string) {\r\n    this.filepath = filepath;\r\n\r\n    this.TO_RADIANS = Math.PI / 180;\r\n    this.image = null;\r\n\r\n    this.is_pattern = false;\r\n    this.pattern = null;\r\n    this.pattern_x_times = 0;\r\n    this.load = function(filename) { \r\n      this.image = new Image();\r\n      this.image.src = filename; return this; \r\n    };\r\n\r\n    this.to_pattern = function(x_times) { \r\n      this.pattern_x_times = x_times;\r\n      this.pattern = GameCanvas.context.createPattern(this.image, 'repeat');\r\n      this.is_pattern = true; \r\n    };\r\n\r\n    this.spritesheet = null;\r\n\r\n    if (this.filepath) {\r\n      this.load(this.filepath);\r\n    } else {\r\n      console.log(`Unable to load sprite. Filename ${filepath} is not defined`);\r\n    }\r\n\r\n  }\r\n\r\n  draw(x: number, y: number, various?: number[]) {\r\n    const animationImageObj: SpriteDetails = {\r\n      x,\r\n      y,\r\n      spriteSheet: various,\r\n      sprite: this.image\r\n    }\r\n\r\n    drawAnimation(animationImageObj);\r\n\r\n  }\r\n\r\n\r\n}\r\n","import Sprite from '../sprite';\r\n\r\nexport const dirt_terrain = new Sprite(\"sprites/dirt_terrian.png\");\r\nexport const cave_terrain = new Sprite(\"sprites/cave_terrain.png\");\r\nexport const grass_terrain = new Sprite(\"sprites/grass1.png\");\r\n\r\nexport default {\r\n  dirt_terrain,\r\n  cave_terrain,\r\n  grass_terrain\r\n}\r\n","import Sprite from '../sprite';\r\n\r\nexport const blackblock = new Sprite(\"sprites/black_block.png\");\r\nexport const bush = new Sprite(\"sprites/bushV1.png\");\r\n\r\nexport default {\r\n  blackblock,\r\n  bush,\r\n}\r\n","import Sprite from '../sprite';\r\n\r\nexport const cliffgrass_back = new Sprite(\"sprites/cliffgrass_back.png\");\r\nexport const cliffgrass_front = new Sprite(\"sprites/cliffgrass_front.png\");\r\nexport const cliffgrass_left = new Sprite(\"sprites/cliffgrass_leftside.png\");\r\nexport const cliffgrass_right = new Sprite(\"sprites/cliffgrass_side.png\");\r\nexport const cliff_front = new Sprite(\"sprites/cliff_front.png\");\r\nexport const cliffgrass_topright = new Sprite(\"sprites/cliffgrass_topright.png\");\r\nexport const cliffgrass_all = new Sprite(\"sprites/cliffgrass_all.png\");\r\nexport const cliffgrass_bottomright = new Sprite(\"sprites/cliffgrass_bottomright.png\");\r\nexport const cliffgrass_bottomleft = new Sprite(\"sprites/cliffgrass_bottomleft.png\");\r\nexport const cliffgrass_topleft = new Sprite(\"sprites/cliffgrass_topleft.png\");\r\nexport const cliffgrass_toprightbottom = new Sprite(\"sprites/cliffgrass_uprightbottom.png\");\r\nexport const cliffgrass_topbottom = new Sprite(\"sprites/cliffgrass_topbottom.png\");\r\nexport const cliffentrance_open = new Sprite(\"sprites/caveentrance_open.png\");\r\nexport const cliffgrass_topleftbottom = new Sprite(\"sprites/cliffgrass_upleftbottom.png\");\r\n\r\nexport default {\r\n    cliffentrance_open,\r\n    cliff_front,\r\n    cliffgrass_front,\r\n    cliffgrass_back,\r\n    cliffgrass_left,\r\n    cliffgrass_right,\r\n    cliffgrass_topright,\r\n    cliffgrass_bottomright,\r\n    cliffgrass_bottomleft,\r\n    cliffgrass_topleft,\r\n    cliffgrass_toprightbottom,\r\n    cliffgrass_topbottom,\r\n    cliffgrass_topleftbottom,\r\n    cliffgrass_all,\r\n}\r\n","import { dirt_terrain, grass_terrain } from \"../../entity/terrain_entities/terrain_sprites\";\r\n\r\nimport { SpriteCollection } from \"../../engine/interfaces/map-sprites\";\r\nimport { blackblock } from \"../../entity/miscellaneous_entities/misc_sprites\";\r\nimport ridge_sprites from \"../../entity/ridgearea_entities/ridge_sprites\";\r\n\r\nexport const ridgeMapTileCollisionMin = 3;\r\n\r\nexport const ridge_battle_map_sprites: SpriteCollection = {\r\n    blackblock,\r\n    dirt_terrain\r\n}\r\n\r\nexport const ridge_map_sprites: SpriteCollection = {\r\n    grass_terrain,\r\n    dirt_terrain,\r\n    ...ridge_sprites\r\n}","export interface CanvasClickCoordinates {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport const DebugClickCursorCoordinates = (canvas: HTMLCanvasElement, event: MouseEvent) => {    \r\n    const {x, y} = GetXYClickLocation(canvas, event);\r\n\r\n    console.log({x: x, y: y});\r\n}\r\n\r\nexport const GetXYClickLocation = (canvas: HTMLCanvasElement, event: MouseEvent): CanvasClickCoordinates => {\r\n    const rect: DOMRect = canvas.getBoundingClientRect();\r\n    const x: number = Math.ceil(event.x - rect.left);\r\n    const y: number = Math.ceil(event.y - rect.top);\r\n\r\n    return {x, y};\r\n};","import Enemy from \"../engine/enemy/enemy\";\r\nimport Player from \"../engine/character/player\";\r\n\r\nexport const attackEnemy = (player: Player, enemy: Enemy) => {\r\n    if (!enemy.battleTurn && !player.disableAttack) {\r\n        player.battleTurn = true;\r\n        player.disableAttack = true;\r\n        player.battleMoveForward = true;\r\n    }\r\n}","import Enemy from \"../enemy/enemy\";\r\nimport { GetXYClickLocation } from \"./CursorClickHelpers\";\r\nimport Player from \"../character/player\";\r\nimport { attackEnemy } from \"../../ui/playerBattleEvents\";\r\n\r\nexport const BattleClickLocations = (player: Player, enemy: Enemy, canvas: HTMLCanvasElement, event: MouseEvent) => {\r\n    const { x, y } = GetXYClickLocation(canvas, event);\r\n\r\n    if (player.fighting && x > 507 && y > 184 && x < 565 && y < 200) {\r\n        attackEnemy(player, enemy);\r\n    }\r\n\r\n    return { x: x, y: y };\r\n};","import { BattleClickLocations } from \"../cursor/BattleEventClickLocations\";\r\nimport Enemy from \"../enemy/enemy\";\r\nimport GameCanvas from \"../canvas/game-canvas\";\r\nimport Player from \"../character/player\";\r\n\r\nexport class BattleEventManager {\r\n    private player: Player;\r\n    private enemy: Enemy;\r\n    private canvas: HTMLCanvasElement = GameCanvas.canvas;\r\n    \r\n    constructor(_player: Player, _enemy: Enemy) {\r\n        this.player = _player;\r\n        this.enemy = _enemy;\r\n    }\r\n\r\n    addBattleEventListeners = () => this.canvas.addEventListener('mousedown', this.battleEventHandler);\r\n    removeBattleEventListeners = () => this.canvas.removeEventListener('mousedown', this.battleEventHandler);\r\n    \r\n    battleEventHandler = (event: MouseEvent) => BattleClickLocations(this.player, this.enemy, this.canvas, event);\r\n}\r\n\r\n","import Enemy from \"../engine/enemy/enemy\";\r\nimport Player from \"../engine/character/player\";\r\n\r\nexport function displayPlayerHealth(context: CanvasRenderingContext2D, playerObject: Player) {\r\n\tcontext.beginPath();\r\n\tcontext.fillStyle = \"rgba(77, 150, 255, 0.9)\";\r\n\tcontext.fill();\r\n\tcontext.fillRect(315, 40, 165, 75);\r\n\tcontext.closePath();\r\n\r\n\tcontext.font = \"bold 1.2em Arial\";\r\n\tscreen.width <= 699 ? context.font = \"bold 1.3em Arial\" : false;\r\n\r\n\tcontext.shadowColor = \"black\";\r\n\tcontext.shadowBlur = 1;\r\n\tcontext.lineWidth = 1;\r\n\tcontext.strokeText(\"Player\", 365, 75);\r\n\tcontext.strokeText(`HP: ${playerObject.health}/${playerObject.maxHealth}`, 345, 95);\r\n\tcontext.shadowBlur = 0;\r\n\r\n\tcontext.fillStyle = \"white\";\r\n\tif (playerObject.health < playerObject.maxHealth / 3) {\r\n\t\tcontext.fillStyle = \"Crimson\";\r\n\t}\r\n\r\n\tcontext.fillText(\"Player\", 365, 75);\r\n\tcontext.fillText(`HP: ${playerObject.health}/${playerObject.maxHealth}`, 345, 95);\r\n\tcontext.fill();\r\n}\r\n\r\nexport function displayEnemyHealth(context: CanvasRenderingContext2D, enemyObject: Enemy) {\r\n\tcontext.beginPath();\r\n\tcontext.fillStyle = \"rgba(125, 50, 75, 1)\";\r\n\tcontext.fill();\r\n\tcontext.fillRect(142, 40, 165, 75);\r\n\tcontext.closePath();\r\n\r\n\tcontext.font = \"bold 1.2em Arial\";\r\n\tscreen.width <= 699 ? context.font = \"bold 1.3em Arial\" : false;\r\n\tcontext.shadowColor= \"black\";\r\n\tcontext.shadowBlur= 1;\r\n\tcontext.lineWidth= 1;\r\n\tcontext.strokeText( enemyObject.name, 170, 75);\r\n\tcontext.strokeText(`HP: ${enemyObject.health}/${enemyObject.totalHealth}`, 185, 95);\r\n\r\n\tcontext.shadowBlur= 0;\r\n\tcontext.fillStyle = \"white\";\r\n\tcontext.fillText(enemyObject.name, 170, 75);\r\n\t\r\n\tif (enemyObject.health < enemyObject.totalHealth / 3) {\r\n\t\tcontext.fillStyle = \"Crimson\";\r\n\t}\r\n\r\n\tcontext.fillText(`HP: ${enemyObject.health}/${enemyObject.totalHealth}`, 185, 95);\r\n}\r\n\r\nexport function playerAttackMenu(context: CanvasRenderingContext2D, playerObject: Player) {\r\n\tcontext.beginPath();\r\n\tcontext.fillStyle = \"rgba(77,150,255,0.9)\";\r\n\tcontext.fill();\r\n\tcontext.fillRect(475, 125, 125, 300);\r\n\tcontext.closePath();\r\n\r\n\tcontext.font = \"bold 1.2em Arial\";\r\n\r\n\tscreen.width <= 699 ? context.font = \"bold 1.3em Arial\" : false;\r\n\tcontext.shadowColor= \"black\";\r\n\tcontext.shadowBlur= 1;\r\n\tcontext.lineWidth= 1;\r\n\tcontext.strokeText(\"Potions\", 507, 350);\r\n\tcontext.strokeText(\"Special\", 507, 275);\r\n\tcontext.strokeText(\"Attack\", 507, 200);\r\n\r\n\tcontext.shadowBlur= 0;\r\n\tcontext.fillStyle = \"grey\";\r\n\tcontext.fillText(\"Potions\", 507, 350);\r\n\tcontext.fillText(\"Special\", 507, 275);\r\n\t\r\n\tcontext.fillStyle = \"white\";\r\n\tif (playerObject.disableAttack) {\r\n\tcontext.fillStyle = \"grey\";\r\n\t}\r\n\tcontext.fillText(\"Attack\", 507, 200);\r\n}\r\n\r\nexport function displayRewardMenu(context: CanvasRenderingContext2D, enemyObject: Enemy) {\r\n\tcontext.beginPath();\r\n\tcontext.fillStyle = \"rgba(77,150,255,0.9)\";\r\n\tcontext.fill();\r\n\tcontext.fillRect(190, 350, 260, 75);\r\n\tcontext.closePath();\r\n\r\n\tcontext.font = \"bold 1.2em Arial\";\r\n\tscreen.width <= 699 ? context.font = \"bold 1.3em Arial\" : false;\r\n\tcontext.shadowColor = \"black\";\r\n\tcontext.shadowBlur = 1;\r\n\tcontext.lineWidth = 1;\r\n\tcontext.strokeText(`${enemyObject.name} Slain!`, 200, 370);\r\n\tcontext.strokeText(`+${enemyObject.goldReward} gold coins`, 200, 395);\r\n\tcontext.strokeText(`+${enemyObject.experienceReward} Experience`, 200, 420);\r\n\r\n\tcontext.shadowBlur = 0;\r\n\tcontext.fillStyle = \"white\";\r\n\tcontext.fillText(`${enemyObject.name} Slain!`, 200, 370);\r\n\tcontext.fillText(`+${enemyObject.goldReward} gold coins`, 200, 395);\r\n\tcontext.fillText(`+${enemyObject.experienceReward} Experience`, 200, 420);\r\n}\r\n\r\nexport function displayLevelUp(context: CanvasRenderingContext2D, playerObject: Player) {\r\n\tcontext.beginPath();\r\n\tcontext.fillStyle = \"rgba(77, 150, 255, 0.9)\";\r\n\tcontext.fill();\r\n\tcontext.fillRect(190, 435, 260, 35);\r\n\tcontext.closePath();\r\n\r\n\tcontext.font = \"bold 1.2em Arial\";\r\n\tscreen.width <= 699 ? context.font = \"bold 1.3em Arial\" : false;\r\n\tcontext.shadowColor = \"black\";\r\n\tcontext.shadowBlur = 1;\r\n\tcontext.lineWidth = 1;\r\n\tcontext.strokeText(`Reached level ${playerObject.level}!`, 240, 458);\r\n\r\n\tcontext.shadowBlur = 0;\r\n\tcontext.fillStyle = \"white\";\r\n\tcontext.fillText(`Reached level ${playerObject.level}!`, 240, 458);\r\n}\r\n\r\nexport function displayFallenText(context: CanvasRenderingContext2D) {\r\n\tcontext.beginPath();\r\n\tcontext.fillStyle = \"rgba(77, 150, 255, 0.9)\";\r\n\tcontext.fill();\r\n\tcontext.fillRect(190, 350, 260, 35);\r\n\tcontext.closePath();\r\n\r\n\tcontext.font = \"bold 1.2em Arial\";\r\n\tscreen.width <= 699 ? context.font = \"bold 1.3em Arial\" : false;\r\n\tcontext.shadowColor = \"black\";\r\n\tcontext.shadowBlur = 1;\r\n\tcontext.lineWidth = 1;\r\n\tcontext.strokeText(`You have fallen in battle!`, 207, 375);\r\n\r\n\tcontext.shadowBlur = 0;\r\n\tcontext.fillStyle = \"white\";\r\n\tcontext.fillText(`You have fallen in battle!`, 207, 375);\r\n}","import Player from \"../engine/character/player\";\r\nimport { TileDetails } from \"../engine/interfaces/tile-details\";\r\n\r\nexport default class Scene {\r\n  mapArr: any;\r\n  tileObj: any;\r\n  player: Player;\r\n  BLOCK_W: number;\r\n  BLOCK_H: number;\r\n\r\n  constructor(mapArr: Array<any>, tileObj: any, player: Player) {\r\n    this.mapArr = mapArr;\r\n    this.tileObj = tileObj;\r\n    this.player = player;\r\n    this.BLOCK_W = 32;\r\n    this.BLOCK_H = 32;\r\n  }\r\n\r\n  renderTile(obj: { [x: string]: { draw: (arg0: any, arg1: any) => void; }; }, propertyIndex: any, tilex: number, tiley: number) {\r\n    let objectKeys = Object.keys(obj);\r\n\r\n    obj[objectKeys[propertyIndex]].draw(tilex, tiley);\r\n  }\r\n\r\n  tileCollision(tileDetails: TileDetails) {\r\n\r\n    if (tileDetails.tileIndex >= tileDetails.tileCollisionMin) {\r\n\r\n      if (tileDetails.tileY + 20 < this.player.y) {\r\n        this.player.y += 2;\r\n        return;\r\n      }\r\n\r\n      if (tileDetails.tileY - 10 > this.player.y) {\r\n        this.player.y -= 2;\r\n        return;\r\n      }\r\n\r\n      if (tileDetails.tileX - 10 > this.player.x) {\r\n        this.player.x -= 2;\r\n        return;\r\n      }\r\n\r\n      if (tileDetails.tileX + 20 < this.player.x) {\r\n        this.player.x += 2;\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  renderMap(tileCollisionMin: number) {\r\n      let arrIndex = 0;\r\n\r\n      for (let y = 0; y < 15; y++) {\r\n\r\n          for (let x = 0; x < 20; x++, arrIndex++) {\r\n              let tileX = x * this.BLOCK_W;\r\n              let tileY = y * this.BLOCK_H;\r\n              let tileIndex = this.mapArr[arrIndex];\r\n\r\n\r\n              let tileDetails: TileDetails = {\r\n                tileX,\r\n                tileY,\r\n                tileIndex: tileIndex,\r\n                tileCollisionMin: tileCollisionMin\r\n              }\r\n\r\n\r\n              if (this.player.moving &&\r\n                this.player.x + 20 > tileX &&\r\n                this.player.x - 30 < tileX &&\r\n                this.player.y + 30 > tileY &&\r\n                this.player.y - 25 < tileY) {\r\n\r\n                  this.tileCollision(tileDetails);\r\n              }\r\n\r\n            this.renderTile(this.tileObj, tileIndex, tileX, tileY);\r\n          }\r\n\r\n      }\r\n\r\n  };\r\n\r\n}\r\n","import { GetXYClickLocation } from \"./CursorClickHelpers\";\r\nimport { removeGameOverEventListeners } from \"../eventlisteners/gameover-event-listeners\";\r\nimport { startGame } from \"../../startgame/startgame\";\r\n\r\nexport const GameOverClickLocations = (canvas: HTMLCanvasElement, event: MouseEvent) => {\r\n    const { x, y } = GetXYClickLocation(canvas, event);\r\n\r\n    if (x > 215 && y > 112 && x < 405 && y < 143) {\r\n        removeGameOverEventListeners();\r\n        startGame();\r\n    }\r\n};","import GameCanvas from \"../canvas/game-canvas\";\r\nimport { GameOverClickLocations } from \"../cursor/GameOverClickLocations\";\r\n\r\nconst GameOverClickHandler = (event: MouseEvent) => {\r\n    GameOverClickLocations(GameCanvas.canvas, event);\r\n};\r\n\r\nexport const addGameOverEventListeners = () => GameCanvas.canvas.addEventListener('mousedown', GameOverClickHandler);\r\nexport const removeGameOverEventListeners = () => GameCanvas.canvas.removeEventListener('mousedown', GameOverClickHandler);","export function displayBeatGame(context: CanvasRenderingContext2D) {    \r\n    context.beginPath();\r\n    context.fillStyle = \"rgba(97, 176, 250, 1)\";\r\n    context.fill();\r\n    context.fillRect(0, 0, context.canvas.offsetWidth, context.canvas.offsetHeight);\r\n    context.closePath();\r\n\r\n    context.shadowColor = \"black\";\r\n    context.shadowBlur = 1;\r\n    context.lineWidth = 1;\r\n\r\n    context.font = \"bold 2rem Arial\";\r\n    context.strokeText('Play Again?', 230, 140);\r\n    context.shadowBlur = 0;\r\n\r\n    context.font = \"bold 2.5rem Arial\";\r\n    context.fillStyle = \"rgba(15, 15, 15, 1)\";\r\n    context.fillText(\"You beat the game!\", 135, 90);\r\n\r\n    context.fillStyle = \"white\";\r\n    context.font = \"bold 2rem Arial\";\r\n    context.fillText('Play Again?', 230, 140);\r\n    context.fill();\r\n}","export function displayGameOver(context: CanvasRenderingContext2D) {    \r\n    context.beginPath();\r\n    context.fillStyle = \"rgba(34, 34, 34, 1)\";\r\n    context.fill();\r\n    context.fillRect(0, 0, context.canvas.offsetWidth, context.canvas.offsetHeight);\r\n    context.closePath();\r\n\r\n\r\n    context.shadowColor = \"black\";\r\n    context.shadowBlur = 1;\r\n    context.lineWidth = 1;\r\n    context.font = \"bold 3rem Arial\";\r\n    context.strokeText(\"You have died!\", 145, 90);\r\n\r\n    context.font = \"bold 2rem Arial\";\r\n    context.strokeText('Play Again?', 220, 140);\r\n    context.shadowBlur = 0;\r\n\r\n\r\n    context.font = \"bold 3rem Arial\";\r\n    context.fillStyle = \"Crimson\";\r\n    context.fillText(\"You have died!\", 145, 90);\r\n\r\n    context.fillStyle = \"white\";\r\n    context.font = \"bold 2rem Arial\";\r\n    context.fillText('Play Again?', 220, 140);\r\n    context.fill();\r\n}","export const mapBattle = [\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ];","import { displayEnemyHealth, displayFallenText, displayLevelUp, displayPlayerHealth, displayRewardMenu, playerAttackMenu } from '../ui/playerBattleInterface';\r\n\r\nimport { BattleEventManager } from '../engine/eventlisteners/battleEventManager';\r\nimport { BuiltGameScene } from '../engine/interfaces/built-game-scene';\r\nimport Enemy from '../engine/enemy/enemy';\r\nimport GameCanvas from '../engine/canvas/game-canvas';\r\nimport Limiter from '../engine/fpslimiter';\r\nimport Player from '../engine/character/player';\r\nimport { RunGame } from '../rungame';\r\nimport Scene from './scene';\r\nimport { addGameOverEventListeners } from '../engine/eventlisteners/gameover-event-listeners';\r\nimport animationID from '../engine/animation/animationframeid/animationid';\r\nimport { displayBeatGame } from '../ui/beatGameInterface';\r\nimport { displayGameOver } from '../ui/gameOverInterface';\r\nimport { mapBattle } from './maps/misc_maps';\r\nimport { resetAnimationCounter } from '../engine/animation/animationcounter';\r\n\r\nexport default class BattleScreen {\r\n  private readonly limiter = new Limiter(60);\r\n  private victoryScreen: boolean = false;\r\n  private deathScreen: boolean = false;\r\n  private currentPlayerLevel: number = 0;\r\n  private battleEventManager: BattleEventManager;\r\n\r\n  constructor(_currentPlayerLevel: number, _battleEventManager: BattleEventManager) {\r\n    this.currentPlayerLevel = _currentPlayerLevel;\r\n    this.battleEventManager = _battleEventManager;\r\n\r\n    this.battleEventManager.addBattleEventListeners();\r\n  }\r\n\r\n  public draw(player: Player, enemy: Enemy, gameSceneOrigin: BuiltGameScene) {\r\n    const classThis = this;\r\n\r\n    animationID.animationid.id = requestAnimationFrame(() => {\r\n        classThis.draw(player, enemy, gameSceneOrigin);\r\n    });\r\n\r\n    if (this.limiter.fpsLimiter()) {\r\n      this.limiter.updateCurrentTime();\r\n\r\n      let battleScene = new Scene(mapBattle, gameSceneOrigin.battleMapSprites, player);\r\n      battleScene.renderMap(-1);\r\n  \r\n      playerAttackMenu(GameCanvas.context, player);\r\n      displayPlayerHealth(GameCanvas.context, player);\r\n      displayEnemyHealth(GameCanvas.context, enemy);\r\n      \r\n      player.render();\r\n      enemy.render();\r\n      \r\n      player.basicAttackSequence(player, enemy);\r\n      enemy.basicAttackSequence(enemy, player);\r\n      \r\n      if (player.victory) {\r\n        this.playerDefeatedEnemy(player, enemy, gameSceneOrigin);\r\n      }\r\n\r\n      if (player.dead) {\r\n        this.playerDiedInBattle(player);\r\n      }\r\n\r\n      resetAnimationCounter();\r\n    }\r\n  }\r\n\r\n  private playerDefeatedEnemy(player: Player, enemy: Enemy, sceneOrigin: BuiltGameScene): void {\r\n    displayRewardMenu(GameCanvas.context, enemy);\r\n\r\n    if (this.currentPlayerLevel !== player.level) {\r\n      displayLevelUp(GameCanvas.context, player);\r\n    }\r\n\r\n    if (!this.victoryScreen) {\r\n      this.victoryScreen = true;\r\n      player.rewardFromBattle(enemy);\r\n\r\n      setTimeout(() => {\r\n        this.stopBattleEvent();\r\n\r\n        if (enemy.endGame) {\r\n          player.keyboard.removeKeyboardEvents();\r\n          addGameOverEventListeners();\r\n          displayBeatGame(GameCanvas.context);\r\n        } else {\r\n          player.resetToDefaultState(enemy);\r\n          RunGame({ player: player, gameScene: sceneOrigin });\r\n        }\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  private playerDiedInBattle(player: Player): void {\r\n    displayFallenText(GameCanvas.context);\r\n\r\n    if (!this.deathScreen) {\r\n      this.deathScreen = true;\r\n\r\n      setTimeout(() => {\r\n        player.keyboard.removeKeyboardEvents();\r\n        this.stopBattleEvent();\r\n        addGameOverEventListeners();\r\n        displayGameOver(GameCanvas.context);\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  private stopBattleEvent() {\r\n    this.battleEventManager.removeBattleEventListeners();\r\n    cancelAnimationFrame(animationID.animationid.id);\r\n  }\r\n\r\n}\r\n","import Sprite from \"../sprite\";\r\n\r\nexport const basicAttackSprite = new Sprite(\"sprites/playerAttack_Spritesheet.png\");\r\nexport const playerSprite = \"sprites/character_spritesheet.png\";\r\n\r\nexport default {\r\n  basicAttackSprite,\r\n  playerSprite\r\n}\r\n","import { BattleEventManager } from '../eventlisteners/battleEventManager';\r\nimport BattleScreen from '../../scenes/battlescreen';\r\nimport { BuiltGameScene } from '../interfaces/built-game-scene';\r\nimport { NPCComposition } from '../interfaces/npc-composition';\r\nimport Player from '../character/player';\r\nimport Sprite from '../../entity/sprite';\r\nimport animationID from '../animation/animationframeid/animationid';\r\nimport { computeDistanceBetweenEntities } from '../helpers/helpers';\r\nimport playerSprites from '../../entity/character_entities/character_sprites';\r\n\r\nexport interface CompositionParameters {\r\n  patrol: {\r\n    patToX: any,\r\n    patToY: any\r\n  }\r\n}\r\n\r\nexport default class Enemy implements NPCComposition {\r\n  enemySprite: Sprite;\r\n  health: number;\r\n  name: string;\r\n  totalHealth: number;\r\n  defense: number;\r\n  damage: number;\r\n  direction: number[];\r\n  startX: number;\r\n  startY: number;\r\n  aggroX: number;\r\n  aggroY: number;\r\n  patrolled: boolean;\r\n  x: number;\r\n  y: number;\r\n  goldReward: number;\r\n  experienceReward: number;\r\n  \r\n  // Composition Optional Properties\r\n  patrol?: (patToX?: any, patToY?: any) => void;\r\n\r\n  endGame?: boolean;\r\n\r\n  fighting: boolean;\r\n  battleTurn: boolean;\r\n  battleMoveForward: boolean;\r\n  battleMoveBackward: boolean;\r\n  dead: boolean;\r\n\r\n  constructor(obj: any, _x: number, _y: number) {\r\n    this.enemySprite = new Sprite(obj.sprite);\r\n    this.health = obj.health;\r\n    this.name = obj.name;\r\n    this.totalHealth = obj.health\r\n    this.defense = obj.defense;\r\n    this.damage = obj.damage;\r\n    this.goldReward = obj.goldReward;\r\n    this.experienceReward = obj.experienceReward\r\n    this.direction = [1, 1, 2];\r\n    this.startX = _x;\r\n    this.startY = _y;\r\n    this.patrolled = false;\r\n    this.x = _x;\r\n    this.y = _y;\r\n    this.fighting = false;\r\n    this.battleMoveForward = false;\r\n    this.battleMoveBackward = false;\r\n    this.battleTurn = false;\r\n    this.dead = false;\r\n  }\r\n\r\n  process(player: Player, scene: any, composition?: CompositionParameters) {\r\n    if (this.dead) return;\r\n    \r\n    this.render();\r\n\r\n    if (this.patrol) this.patrol(composition.patrol.patToX, composition.patrol.patToY);\r\n    \r\n    this.fightPlayer(player, scene);\r\n  }\r\n\r\n  render() {\r\n    this.enemySprite.image.width = 32;\r\n    this.enemySprite.image.height = 32;\r\n    this.enemySprite.draw(this.x, this.y, this.direction);\r\n  }\r\n\r\n  fightPlayer(player: Player, battleEventOrigin: BuiltGameScene) {\r\n\r\n    if (computeDistanceBetweenEntities(this.x, this.y, player.x, player.y) <= 32) {\r\n      const battleEventManager = new BattleEventManager(player, this);\r\n      const battleScreen = new BattleScreen(player.level, battleEventManager);\r\n\r\n      cancelAnimationFrame(animationID.animationid.id);\r\n\r\n      player.fighting = true;\r\n      player.direction = [3,4,5];\r\n      player.x = 350;\r\n      player.y = 225;\r\n\r\n      this.aggroX = this.x;\r\n      this.aggroY = this.y;\r\n      this.x = 250;\r\n      this.y = 225;\r\n      this.direction = [6,7,8];\r\n\r\n      battleScreen.draw(player, this, battleEventOrigin);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  basicAttackSequence(enemy: Enemy, player: Player) {\r\n    if (enemy.battleTurn && !player.dead) {\r\n      if (!enemy.battleMoveBackward &&\r\n        enemy.battleMoveForward &&\r\n        enemy.x <= 320) {\r\n\r\n        enemy.x += 2;\r\n\r\n        if (enemy.x > 312) {\r\n          playerSprites.basicAttackSprite.draw(player.x, player.y, [0, 0, 0]);\r\n        }\r\n\r\n        if (enemy.x === 320) {\r\n          player.health = Math.max(player.health - (enemy.damage * 2), 0);\r\n\r\n          setTimeout(() => {\r\n            enemy.battleMoveForward = false;\r\n            enemy.battleMoveBackward = true;\r\n          }, 150);\r\n\r\n          if (player.health <= 0) {\r\n            player.dead = true;\r\n            player.direction = [0, 0, 0];\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!enemy.battleMoveForward &&\r\n        enemy.battleMoveBackward &&\r\n        enemy.x >= 252) {\r\n        enemy.x -= 2;\r\n\r\n        if (enemy.x === 250) {\r\n          enemy.battleTurn = false;\r\n          enemy.battleMoveBackward = false;\r\n          player.disableAttack = false;\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","export default (influenceObject: any) => ({\r\n\r\n  patrol: (patToX?: any, patToY?: any): void => {\r\n\r\n    if (patToX) {\r\n\r\n      patrolCoordinates({\r\n        entity: influenceObject,\r\n        entityCoordinate: influenceObject.x,\r\n        entityStartCoordinate: influenceObject.startX,\r\n        patrolToCoordinate: patToX,\r\n        entityCoordinateProp: 'x'\r\n      });\r\n    }\r\n\r\n    if (patToY) {\r\n\r\n      patrolCoordinates({\r\n        entity: influenceObject,\r\n        entityCoordinate: influenceObject.y,\r\n        entityStartCoordinate: influenceObject.startY,\r\n        patrolToCoordinate: patToY,\r\n        entityCoordinateProp: 'y'\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n});\r\n\r\nfunction togglePatrolled(patrolDetailsObj: any) {\r\n\r\n  if (patrolDetailsObj.entityCoordinate === patrolDetailsObj.patrolToCoordinate) {\r\n    patrolDetailsObj.entity.patrolled = true;\r\n  }\r\n  if (patrolDetailsObj.entityCoordinate === patrolDetailsObj.entityStartCoordinate) {\r\n    patrolDetailsObj.entity.patrolled = false;\r\n  }\r\n\r\n}\r\n\r\nfunction patrolCoordinates(patrolDetailsObj: any) {\r\n\r\n  togglePatrolled(patrolDetailsObj);\r\n\r\n  if (patrolDetailsObj.entity.patrolled) {\r\n    patrolDetailsObj.patrolToCoordinate = patrolDetailsObj.entityStartCoordinate;\r\n  }\r\n\r\n  if (patrolDetailsObj.entityCoordinate > patrolDetailsObj.patrolToCoordinate) {\r\n    patrolDetailsObj.entity[patrolDetailsObj.entityCoordinateProp] -= 1;\r\n    patrolDetailsObj.entity.direction = [3,4,5];\r\n  }\r\n\r\n  if (patrolDetailsObj.entityCoordinate < patrolDetailsObj.patrolToCoordinate) {\r\n    patrolDetailsObj.entity[patrolDetailsObj.entityCoordinateProp] += 1;\r\n    patrolDetailsObj.entity.direction = [6,7,8];\r\n  }\r\n\r\n}\r\n","/* Sprite IDs\r\n\r\n    0 = grass_terrain\r\n    1 = dirt_terrain\r\n    2 = cliffentrance_open\r\n    3 = cliff_front\r\n    4 = cliffgrass_front\r\n    5 = cliffgrass_back\r\n    6 = cliffgrass_left\r\n    7 = cliffgrass_right\r\n    8 = cliffgrass_topright\r\n    9 = cliffgrass_bottomright\r\n    10 = cliffgrass_bottomleft\r\n    11 = cliffgrass_topleft\r\n    12 = cliffgrass_toprightbottom\r\n    13 = cliffgrass_topbottom\r\n    14 = cliffgrass_topleftbottom\r\n    15 = cliffgrass_all\r\n\r\n*/\r\n\r\nexport const mapRidge = [\r\n    0,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,\r\n    7,3,3,3,3,3,3,3,3,3,3,3,6,0,0,0,0,4,4,4,\r\n    7,1,1,1,1,1,1,1,1,1,1,1,6,0,0,0,7,3,3,3,\r\n    7,1,11,5,5,13,13,13,13,13,12,1,6,0,4,4,9,1,1,1,\r\n    7,1,6,0,7,3,3,3,3,3,3,1,6,7,3,3,3,1,11,5,\r\n    7,1,6,0,7,1,1,1,1,1,1,1,6,7,1,1,1,1,6,0,\r\n    7,1,6,0,7,1,15,1,15,1,1,11,0,0,5,5,8,1,6,0,\r\n    7,1,6,0,7,1,1,1,1,1,1,6,0,0,0,0,7,1,6,0,\r\n    7,1,6,0,0,5,5,5,8,1,11,0,0,0,0,0,7,1,6,0,\r\n    7,1,6,0,0,0,0,0,7,1,6,0,0,0,0,0,7,1,6,0,\r\n    9,1,6,0,0,0,0,0,7,1,10,4,4,4,4,4,9,1,6,0,\r\n    1,1,6,0,0,0,0,0,7,1,3,3,3,3,3,3,3,1,6,0,\r\n    5,5,0,0,0,0,0,0,7,1,1,1,1,1,1,1,1,1,6,0,\r\n    0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ];\r\n\r\nexport const mapRidgeAreaBack = [\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,7,3,3,3,3,3,3,3,6,0,0,0,0,0,0,0,\r\n    0,0,0,0,7,1,1,1,1,1,1,1,10,4,0,0,0,0,0,0,\r\n    0,0,0,0,7,1,1,1,1,1,1,1,3,3,6,0,0,0,0,0,\r\n    0,0,0,0,7,1,1,1,1,1,1,1,1,1,6,0,0,0,0,0,\r\n    0,0,0,0,0,8,1,1,1,1,1,1,1,1,6,0,0,0,0,0,\r\n    0,0,0,0,0,0,5,5,5,8,1,14,13,13,4,4,4,4,4,4,\r\n    0,0,0,0,0,0,0,0,0,7,1,3,3,3,3,3,3,3,3,3,\r\n    0,0,0,0,0,0,0,0,0,7,1,1,1,1,1,1,1,1,1,1,\r\n    0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ];\r\n\r\nexport const mapRidgeAreaCave = [\r\n    0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,\r\n    4,4,4,4,9,3,3,3,3,3,3,3,3,3,3,3,3,6,0,0,\r\n    3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,6,0,0,\r\n    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,0,0,\r\n    5,5,5,5,8,1,1,1,1,1,1,1,1,1,1,1,1,6,0,0,\r\n    0,0,0,0,7,1,1,1,1,1,1,1,1,1,11,5,5,6,0,0,\r\n    0,0,0,0,7,1,1,1,1,1,1,1,1,11,6,0,0,6,0,0,\r\n    0,0,0,0,7,1,1,1,1,1,1,1,1,6,10,4,4,6,0,0,\r\n    0,0,0,0,0,5,8,1,1,1,1,1,1,10,3,3,3,6,0,0,\r\n    0,0,0,0,0,0,0,8,1,1,1,1,1,3,3,2,3,6,0,0,\r\n    0,0,0,0,0,0,0,7,1,1,1,1,1,1,1,1,1,6,0,0,\r\n    0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ];\r\n","import { GreenSlime, SlimeSuper } from '../engine/enemy/enemies/enemy-database';\r\nimport { renderMiscSprites, transferNewLocationOnCollision } from '../engine/helpers/helpers';\r\nimport { ridgeMapTileCollisionMin, ridge_battle_map_sprites, ridge_map_sprites } from './scene_sprites/ridge_map_sprites';\r\n\r\nimport Enemy from '../engine/enemy/enemy';\r\nimport { GameScene } from '../engine/interfaces/GameScene';\r\nimport Player from '../engine/character/player';\r\nimport Scene from './scene';\r\nimport { SpriteCollection } from '../engine/interfaces/map-sprites';\r\nimport { StaticEntity } from '../engine/interfaces/static-entity';\r\nimport { TransferScene } from '../engine/interfaces/transfer-scene';\r\nimport animationID from '../engine/animation/animationframeid/animationid';\r\nimport canPatrol from '../engine/enemy/composition/entitypatrol';\r\nimport { mapRidge } from './maps/ridge_maps';\r\nimport miscellaneousEntities from '../entity/miscellaneous_entities/misc_sprites';\r\nimport { resetAnimationCounter } from '../engine/animation/animationcounter';\r\n\r\nexport default class RidgeArea implements GameScene {\r\n  sceneMapSprites: SpriteCollection = ridge_map_sprites;\r\n  battleMapSprites: SpriteCollection = ridge_battle_map_sprites; \r\n\r\n  private slimeMidTop: Enemy;\r\n  private slimeMidBottom: Enemy;\r\n  private slimeBottom: Enemy;\r\n  private slimeRight: Enemy;\r\n  private slimeLeft: Enemy;\r\n  private slimeSuper: Enemy;\r\n  private transferScenes: TransferScene[];\r\n  private miscEntities: StaticEntity[] = [\r\n    { x: 230, y: 300 },\r\n    { x: 400, y: 250 },\r\n    { x: 425, y: 10 },\r\n    { x: 120, y: 100 },\r\n    { x: 125, y: 350 }\r\n  ]\r\n  private tileCollisionMin = ridgeMapTileCollisionMin;\r\n\r\n  constructor() {\r\n    this.slimeMidBottom = new Enemy(GreenSlime, 300, 215);\r\n    Object.assign(this.slimeMidBottom, canPatrol(this.slimeMidBottom));\r\n\r\n    this.slimeMidTop = new Enemy(GreenSlime, 325, 155);\r\n    Object.assign(this.slimeMidTop, canPatrol(this.slimeMidTop));\r\n\r\n    this.slimeBottom = new Enemy(GreenSlime, 285, 275);\r\n    Object.assign(this.slimeBottom, canPatrol(this.slimeBottom));\r\n\r\n    this.slimeRight = new Enemy(GreenSlime, 525, 155);\r\n    Object.assign(this.slimeRight, canPatrol(this.slimeRight));\r\n\r\n    this.slimeLeft = new Enemy(GreenSlime, 75, 55);\r\n    Object.assign(this.slimeLeft, canPatrol(this.slimeLeft));\r\n\r\n    this.slimeSuper = new Enemy(SlimeSuper, 542, 93);\r\n  }\r\n\r\n  draw(player: Player) {\r\n    let ridgeScene = new Scene(mapRidge, this.sceneMapSprites, player);\r\n    ridgeScene.renderMap(this.tileCollisionMin);\r\n\r\n    renderMiscSprites(miscellaneousEntities.bush, this.miscEntities);\r\n    transferNewLocationOnCollision(player, this.transferScenes, animationID.animationid.id);\r\n\r\n    this.slimeMidBottom.process(player, this, { patrol: { patToX: 200, patToY: undefined } });\r\n    this.slimeMidTop.process(player, this, { patrol: { patToX: 250, patToY: undefined } });\r\n    this.slimeBottom.process(player, this, { patrol: { patToX: undefined, patToY: 380 } });\r\n    this.slimeRight.process(player, this, { patrol: { patToX: 450, patToY: undefined } });\r\n    this.slimeLeft.process(player, this, { patrol: { patToX: 300, patToY: undefined } });\r\n    this.slimeSuper.process(player, this);\r\n  \r\n    resetAnimationCounter();\r\n  }\r\n\r\n  setTransferScenes(_transferScenes: TransferScene[]) {\r\n    this.transferScenes = _transferScenes;\r\n  }\r\n}\r\n","import { GreenSlime, SlimeSuper } from '../engine/enemy/enemies/enemy-database';\r\nimport { renderMiscSprites, transferNewLocationOnCollision } from '../engine/helpers/helpers';\r\nimport { ridgeMapTileCollisionMin, ridge_battle_map_sprites, ridge_map_sprites } from './scene_sprites/ridge_map_sprites';\r\n\r\nimport Enemy from '../engine/enemy/enemy';\r\nimport { GameScene } from '../engine/interfaces/GameScene';\r\nimport Player from '../engine/character/player';\r\nimport Scene from './scene';\r\nimport { SpriteCollection } from '../engine/interfaces/map-sprites';\r\nimport { StaticEntity } from '../engine/interfaces/static-entity';\r\nimport { TransferScene } from '../engine/interfaces/transfer-scene';\r\nimport animationID from '../engine/animation/animationframeid/animationid';\r\nimport canPatrol from '../engine/enemy/composition/entitypatrol';\r\nimport { mapRidgeAreaBack } from './maps/ridge_maps';\r\nimport miscellaneousEntities from '../entity/miscellaneous_entities/misc_sprites';\r\nimport { resetAnimationCounter } from '../engine/animation/animationcounter';\r\n\r\nexport default class RidgeAreaBack implements GameScene {\r\n\tsceneMapSprites: SpriteCollection = ridge_map_sprites;\r\n\tbattleMapSprites: SpriteCollection = ridge_battle_map_sprites;\r\n\r\n\tprivate slimeMidBottom: Enemy;\r\n\tprivate slimeCenterTop: Enemy;\r\n\tprivate slimeCenterBottom: Enemy;\r\n\tprivate slimeSuper: Enemy;\r\n\tprivate tileCollisionMin: number = ridgeMapTileCollisionMin;\r\n\tprivate transferScenes: TransferScene[];\r\n\tprivate miscEntities: StaticEntity[] = [\r\n\t\t{ x: 47, y: 200 },\r\n\t\t{ x: 174, y: 71 },\r\n\t\t{ x: 533, y: 86 },\r\n\t\t{ x: 332, y: 435 },\r\n\t\t{ x: 299, y: 48 }\r\n\t];\r\n\r\n\tconstructor() {\r\n\t\tthis.slimeMidBottom = new Enemy(GreenSlime, 355, 345);\r\n\t\tObject.assign(this.slimeMidBottom, canPatrol(this.slimeMidBottom));\r\n\r\n\t\tthis.slimeCenterTop = new Enemy(GreenSlime, 350, 197);\r\n\t\tObject.assign(this.slimeCenterTop, canPatrol(this.slimeCenterTop));\r\n\r\n\t\tthis.slimeCenterBottom = new Enemy(GreenSlime, 199, 250);\r\n\t\tObject.assign(this.slimeCenterBottom, canPatrol(this.slimeCenterBottom));\r\n\r\n\t\tthis.slimeSuper = new Enemy(SlimeSuper, 259, 164);\r\n\t}\r\n\r\n\tdraw(player: Player) {\r\n\t\tlet ridgeScene = new Scene(mapRidgeAreaBack, this.sceneMapSprites, player);\r\n\t\tridgeScene.renderMap(this.tileCollisionMin);\r\n\t\r\n\t\trenderMiscSprites(miscellaneousEntities.bush, this.miscEntities);\r\n\t\ttransferNewLocationOnCollision(player, this.transferScenes, animationID.animationid.id);\r\n\r\n\t\tthis.slimeCenterTop.process(player, this, { patrol: { patToX: 190, patToY: undefined } });\r\n\t\tthis.slimeCenterBottom.process(player, this, { patrol: { patToX: 401, patToY: undefined } });\r\n\t\tthis.slimeMidBottom.process(player, this, { patrol: { patToX: 520, patToY: undefined } });\r\n\t\tthis.slimeSuper.process(player, this);\r\n\r\n\t\tresetAnimationCounter();\r\n\t}\r\n\r\n\tsetTransferScenes(_transferScenes: TransferScene[]) {\r\n\t\tthis.transferScenes = _transferScenes;\r\n\t}\r\n}\r\n","import { GreenSlime, SlimeSuper } from '../engine/enemy/enemies/enemy-database';\r\nimport { renderMiscSprites, transferNewLocationOnCollision } from '../engine/helpers/helpers';\r\nimport { ridgeMapTileCollisionMin, ridge_battle_map_sprites, ridge_map_sprites } from './scene_sprites/ridge_map_sprites';\r\n\r\nimport Enemy from '../engine/enemy/enemy';\r\nimport { GameScene } from '../engine/interfaces/GameScene';\r\nimport Player from '../engine/character/player';\r\nimport Scene from './scene';\r\nimport { SpriteCollection } from '../engine/interfaces/map-sprites';\r\nimport { StaticEntity } from '../engine/interfaces/static-entity';\r\nimport { TransferScene } from '../engine/interfaces/transfer-scene';\r\nimport animationID from '../engine/animation/animationframeid/animationid';\r\nimport canPatrol from '../engine/enemy/composition/entitypatrol';\r\nimport { mapRidgeAreaCave } from './maps/ridge_maps';\r\nimport miscellaneousEntities from '../entity/miscellaneous_entities/misc_sprites';\r\nimport { resetAnimationCounter } from '../engine/animation/animationcounter';\r\n\r\nexport default class RidgeAreaCave implements GameScene {\r\n    sceneMapSprites: SpriteCollection = ridge_map_sprites;\r\n    battleMapSprites: SpriteCollection = ridge_battle_map_sprites;\r\n\r\n    private slimeSuper: Enemy;\r\n    private slimeTop: Enemy;\r\n    private slimeMiddle: Enemy;\r\n    private tileCollisionMin: number = ridgeMapTileCollisionMin;\r\n    private transferScenes: TransferScene[];\r\n    private miscEntities: StaticEntity[] = [\r\n        { x: 450, y: 400 },\r\n        { x: 495, y: 185 },\r\n        { x: 575, y: 75 },\r\n        { x: 50, y: 175 },\r\n        { x: 125, y: 350 }\r\n    ];\r\n\r\n\r\n    constructor() {\r\n        this.slimeSuper = new Enemy(SlimeSuper, 429, 315);\r\n\r\n        this.slimeTop = new Enemy(GreenSlime, 175, 115);\r\n        Object.assign(this.slimeTop, canPatrol(this.slimeTop));\r\n\r\n        this.slimeMiddle = new Enemy(GreenSlime, 255, 270);\r\n        Object.assign(this.slimeMiddle, canPatrol(this.slimeMiddle));        \r\n    }\r\n\r\n    draw(player: Player) {\r\n        let ridgeScene = new Scene(mapRidgeAreaCave, this.sceneMapSprites, player);\r\n        ridgeScene.renderMap(this.tileCollisionMin);\r\n\r\n        renderMiscSprites(miscellaneousEntities.bush, this.miscEntities);\r\n\r\n        this.slimeSuper.process(player, this);\r\n        this.slimeTop.process(player, this, { patrol: { patToX: 350, patToY: undefined} });\r\n        this.slimeMiddle.process(player, this, { patrol: { patToX: 350, patToY: undefined } });\r\n\r\n        transferNewLocationOnCollision(player, this.transferScenes, animationID.animationid.id);\r\n        \r\n        resetAnimationCounter();\r\n    }\r\n\r\n    setTransferScenes(_transferScenes: TransferScene[]) {\r\n        this.transferScenes = _transferScenes;\r\n    }\r\n}\r\n","import Sprite from '../sprite';\r\n\r\nexport const cave_wall = new Sprite(\"sprites/cave_wall.png\");\r\nexport const cave_ceiling = new Sprite(\"sprites/cave_ceiling.png\");\r\nexport const cave_opening = new Sprite(\"sprites/cave_openingdoor.png\");\r\n\r\nexport default {\r\n  cave_wall,\r\n  cave_ceiling,\r\n  cave_opening\r\n}\r\n","import { cave_ceiling, cave_opening, cave_wall } from \"../../entity/cave_entities/cave_sprites\";\r\n\r\nimport { SpriteCollection } from \"../../engine/interfaces/map-sprites\";\r\nimport { blackblock } from \"../../entity/miscellaneous_entities/misc_sprites\";\r\nimport { cave_terrain } from \"../../entity/terrain_entities/terrain_sprites\";\r\n\r\nexport const caveMapTileCollisionMin = 3;\r\n\r\nexport const cave_battle_map_sprites: SpriteCollection = {\r\n    blackblock,\r\n    cave_wall\r\n}\r\n\r\nexport const cave_map_sprites: SpriteCollection = {\r\n    blackblock,\r\n    cave_wall,\r\n    cave_opening,\r\n    cave_terrain,\r\n    cave_ceiling,\r\n}\r\n\r\n","/*\r\n\r\n    Sprite IDs\r\n\r\n    0 = blackblock,\r\n    1 = cave_terrain\r\n    2 = cave_opening\r\n    3 = cave_wall\r\n    4 = cave_ceiling\r\n\r\n*/\r\n\r\nexport const mapRidgeAreaCaveLevelOne =[\r\n    0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,4,3,3,2,3,4,0,0,\r\n    0,0,4,4,4,4,4,4,0,0,0,0,4,1,1,1,1,4,0,0,\r\n    0,0,4,3,3,3,3,4,4,0,0,0,4,1,1,1,1,4,0,0,\r\n    0,0,4,1,1,1,1,3,4,0,0,0,4,1,1,1,4,4,0,0,\r\n    0,0,4,1,1,1,1,1,4,4,0,4,4,4,1,1,4,3,0,0,\r\n    0,0,4,4,4,4,4,1,1,4,4,4,3,3,1,1,4,3,0,0,\r\n    0,0,3,3,3,3,4,1,1,3,4,3,1,1,1,1,4,0,0,0,\r\n    0,0,0,0,0,0,4,1,1,1,4,1,1,1,4,4,4,0,0,0,\r\n    0,0,0,0,0,0,4,1,1,1,3,1,1,1,4,3,3,0,0,0,\r\n    0,0,0,0,0,0,4,4,1,1,1,1,1,4,4,0,0,0,0,0,\r\n    0,0,0,0,0,0,3,4,4,1,1,1,4,4,3,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,3,4,4,1,4,4,3,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,3,4,1,4,3,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,4,1,4,0,0,0,0,0,0,0,0 ];\r\n\r\nexport const mapRidgeAreaCaveLevelTwo = [\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,4,4,4,4,4,4,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,4,3,3,3,3,4,0,0,0,0,0,0,0,0,\r\n    0,0,0,0,0,0,4,1,1,1,1,4,4,4,4,0,0,0,0,0,\r\n    0,0,0,0,0,0,4,1,1,1,1,3,3,3,4,4,0,0,0,0,\r\n    0,0,0,0,0,0,4,1,1,1,1,1,1,1,3,4,0,0,0,0,\r\n    0,0,0,0,0,0,4,1,1,1,1,1,1,1,1,4,0,0,0,0,\r\n    0,0,0,0,0,0,4,1,1,1,1,4,4,1,1,4,4,0,0,0,\r\n    0,0,0,0,0,0,4,4,4,4,4,4,4,1,1,3,4,0,0,0,\r\n    0,0,0,0,0,0,3,3,3,3,3,3,4,1,1,1,4,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,4,1,1,1,4,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,4,4,1,4,4,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,3,4,1,4,3,0,0,0,\r\n    0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,4,0,0,0,0 ];","import { caveMapTileCollisionMin, cave_battle_map_sprites, cave_map_sprites } from './scene_sprites/cave_map_sprites';\r\n\r\nimport Enemy from '../engine/enemy/enemy';\r\nimport { GameScene } from '../engine/interfaces/GameScene';\r\nimport Player from '../engine/character/player';\r\nimport Scene from './scene';\r\nimport { ShadeWalker } from '../engine/enemy/enemies/enemy-database';\r\nimport { SpriteCollection } from '../engine/interfaces/map-sprites';\r\nimport { TransferScene } from '../engine/interfaces/transfer-scene';\r\nimport animationID from '../engine/animation/animationframeid/animationid';\r\nimport canPatrol from '../engine/enemy/composition/entitypatrol';\r\nimport { mapRidgeAreaCaveLevelOne } from './maps/cave_maps';\r\nimport { resetAnimationCounter } from '../engine/animation/animationcounter';\r\nimport { transferNewLocationOnCollision } from '../engine/helpers/helpers';\r\n\r\nexport default class RidgeAreaCaveLevelOne implements GameScene {\r\n    sceneMapSprites: SpriteCollection = cave_map_sprites;\r\n    battleMapSprites: SpriteCollection = cave_battle_map_sprites;\r\n\r\n    private shadeWalkerLeft: Enemy;\r\n    private shadeWalkerRight: Enemy;\r\n    private transferScenes: TransferScene[];\r\n    private tileCollisionMin = caveMapTileCollisionMin;\r\n\r\n    constructor() {\r\n        this.shadeWalkerLeft = new Enemy(ShadeWalker, 100, 150);\r\n        Object.assign(this.shadeWalkerLeft, canPatrol(this.shadeWalkerLeft));\r\n\r\n        this.shadeWalkerRight = new Enemy(ShadeWalker, 480, 65);\r\n    }\r\n\r\n    draw(player: Player) {\r\n        let ridgeScene = new Scene(mapRidgeAreaCaveLevelOne, this.sceneMapSprites, player);\r\n        ridgeScene.renderMap(this.tileCollisionMin);\r\n\r\n        this.shadeWalkerLeft.process(player, this, { patrol: { patToX: 200, patToY: undefined } });\r\n        this.shadeWalkerRight.process(player, this);\r\n\r\n        transferNewLocationOnCollision(player, this.transferScenes, animationID.animationid.id);\r\n        \r\n        resetAnimationCounter();\r\n    }\r\n\r\n    setTransferScenes(_transferScenes: TransferScene[]) {\r\n        this.transferScenes = _transferScenes;\r\n    }\r\n}\r\n","import { caveMapTileCollisionMin, cave_battle_map_sprites, cave_map_sprites } from './scene_sprites/cave_map_sprites';\r\n\r\nimport Enemy from '../engine/enemy/enemy';\r\nimport { GameScene } from '../engine/interfaces/GameScene';\r\nimport Player from '../engine/character/player';\r\nimport Scene from './scene';\r\nimport { ShadeKeeper } from '../engine/enemy/enemies/enemy-database';\r\nimport { SpriteCollection } from '../engine/interfaces/map-sprites';\r\nimport { TransferScene } from '../engine/interfaces/transfer-scene';\r\nimport animationID from '../engine/animation/animationframeid/animationid';\r\nimport { mapRidgeAreaCaveLevelTwo } from './maps/cave_maps';\r\nimport { resetAnimationCounter } from '../engine/animation/animationcounter';\r\nimport { transferNewLocationOnCollision } from '../engine/helpers/helpers';\r\n\r\nexport default class RidgeAreaCaveLevelTwo implements GameScene {\r\n    sceneMapSprites: SpriteCollection = cave_map_sprites;\r\n    battleMapSprites: SpriteCollection = cave_battle_map_sprites;\r\n\r\n    private shadeKeeper: Enemy;\r\n    private transferScenes: TransferScene[];\r\n    private tileCollisionMin = caveMapTileCollisionMin;\r\n\r\n    constructor() {\r\n        this.shadeKeeper = new Enemy(ShadeKeeper, 275, 200);\r\n        this.shadeKeeper.direction = [6, 6, 7];\r\n        this.shadeKeeper.endGame = true;\r\n    }\r\n\r\n    draw(player: Player) {\r\n        let ridgeScene = new Scene(mapRidgeAreaCaveLevelTwo, this.sceneMapSprites, player);\r\n        ridgeScene.renderMap(this.tileCollisionMin);\r\n\r\n        this.shadeKeeper.process(player, this);\r\n\r\n        transferNewLocationOnCollision(player, this.transferScenes, animationID.animationid.id);\r\n        \r\n        resetAnimationCounter();\r\n    }\r\n\r\n    setTransferScenes(_transferScenes: TransferScene[]) {\r\n        this.transferScenes = _transferScenes;\r\n    }\r\n}\r\n","import RidgeArea from \"./ridgearea\";\r\nimport RidgeAreaBack from \"./ridgeareaback\";\r\nimport RidgeAreaCave from \"./ridgeareacave\";\r\nimport RidgeAreaCaveLevelOne from \"./ridgeareacave_level1\";\r\nimport RidgeAreaCaveLevelTwo from './ridgeareacave_level2';\r\n\r\nexport var ridgeArea: RidgeArea;\r\nexport var ridgeAreaBack: RidgeAreaBack;\r\nexport var ridgeAreaCave: RidgeAreaCave;\r\nexport var ridgeAreaCaveLevelOne: RidgeAreaCaveLevelOne;\r\nexport var ridgeAreaCaveLevelTwo: RidgeAreaCaveLevelTwo;\r\n\r\nexport const InitializeGameScenes = () => {\r\n    ridgeArea = new RidgeArea();\r\n    ridgeAreaBack = new RidgeAreaBack();\r\n    ridgeAreaCave = new RidgeAreaCave();\r\n    ridgeAreaCaveLevelOne = new RidgeAreaCaveLevelOne();\r\n    ridgeAreaCaveLevelTwo = new RidgeAreaCaveLevelTwo();\r\n\r\n    ridgeArea.setTransferScenes([\r\n        {\r\n            gameScene: ridgeAreaBack,\r\n            transferX: 0,\r\n            transferY: 356,\r\n            arriveX: 585,\r\n            arriveY: 352\r\n        },\r\n        {\r\n            gameScene: ridgeAreaCave,\r\n            transferX: 635,\r\n            transferY: 120,\r\n            arriveX: 40,\r\n            arriveY: 95\r\n        },\r\n    ]);\r\n\r\n    ridgeAreaBack.setTransferScenes([\r\n        {\r\n            gameScene: ridgeArea,\r\n            transferX: 630,\r\n            transferY: 355,\r\n            arriveX: 30,\r\n            arriveY: 346\r\n        },\r\n    ]);\r\n\r\n    ridgeAreaCave.setTransferScenes([\r\n        {\r\n            gameScene: ridgeArea,\r\n            transferX: 9,\r\n            transferY: 100,\r\n            arriveX: 590,\r\n            arriveY: 95\r\n        },\r\n        {\r\n            gameScene: ridgeAreaCaveLevelOne,\r\n            transferX: 495,\r\n            transferY: 310,\r\n            arriveX: 320,\r\n            arriveY: 427\r\n        }\r\n    ]);\r\n\r\n    ridgeAreaCaveLevelOne.setTransferScenes([\r\n        {\r\n            gameScene: ridgeAreaCave,\r\n            transferX: 330,\r\n            transferY: 480,\r\n            arriveX: 485,\r\n            arriveY: 325\r\n        },\r\n        {\r\n            gameScene: ridgeAreaCaveLevelTwo,\r\n            transferX: 496,\r\n            transferY: 52,\r\n            arriveX: 450,\r\n            arriveY: 436,\r\n        }\r\n    ]);\r\n\r\n    ridgeAreaCaveLevelTwo.setTransferScenes([\r\n        {\r\n            gameScene: ridgeAreaCaveLevelOne,\r\n            transferX: 460,\r\n            transferY: 475,\r\n            arriveX: 484,\r\n            arriveY: 75\r\n        },\r\n    ]);\r\n}","import Player from \"./player\";\r\n\r\nexport default class Keyboard {\r\n  player: Player;\r\n  w: boolean;\r\n  a: boolean;\r\n  s: boolean;\r\n  d: boolean;\r\n  escapeToggle: number;\r\n  keyBoardOff: boolean;\r\n  KEY_W: string;\r\n  KEY_A: string;\r\n  KEY_S: string;\r\n  KEY_D: string;\r\n  KEY_ESCAPE: string;\r\n\r\n  constructor(_player: Player) {\r\n    this.player = _player;\r\n\r\n    this.w = false;\r\n    this.a = false;\r\n    this.s = false;\r\n    this.d = false;\r\n    this.keyBoardOff = false;\r\n    this.escapeToggle = 0;\r\n\r\n    this.KEY_W = \"w\";\r\n    this.KEY_A = \"a\";\r\n    this.KEY_S = \"s\";\r\n    this.KEY_D = \"d\";\r\n    this.KEY_ESCAPE = \"escape\";\r\n  }\r\n\r\n  inputKeyDown(event: KeyboardEvent) {\r\n    {\r\n      if (this.player.dead) return;\r\n\r\n      if (this.player.fighting) {\r\n        this.player.moving = false;\r\n        this.setKeysToFalse();\r\n        return;\r\n      }\r\n\r\n      switch (event.key.toLowerCase()) {\r\n        case this.KEY_W:\r\n          this.w = true;\r\n          this.player.moving = true;\r\n          break;\r\n        case this.KEY_A:\r\n          this.a = true;\r\n          this.player.moving = true;\r\n          break;\r\n        case this.KEY_S:\r\n          this.s = true;\r\n          this.player.moving = true;\r\n          break;\r\n        case this.KEY_D:\r\n          this.d = true;\r\n          this.player.moving = true;\r\n          break;\r\n        case this.KEY_ESCAPE:\r\n          this.escapeToggle++;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  inputKeyUp(event: KeyboardEvent) {\r\n    if (this.player.dead) return;\r\n\r\n    if (this.player.fighting) {\r\n      this.player.moving = false;\r\n      this.setKeysToFalse();\r\n      return;\r\n    }\r\n\r\n    switch (event.key) {\r\n      case this.KEY_W:\r\n        this.w = false;\r\n        this.player.direction = [9];\r\n        break;\r\n      case this.KEY_A:\r\n        this.a = false;\r\n        this.player.direction = [3];\r\n        break;\r\n      case this.KEY_S:\r\n        this.s = false;\r\n        this.player.direction = [0];\r\n        break;\r\n      case this.KEY_D:\r\n        this.d = false;\r\n        this.player.direction = [6];\r\n        break;\r\n      case this.KEY_ESCAPE:\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (!this.KEY_W && !this.KEY_A && !this.KEY_S && !this.KEY_D) {\r\n      this.player.moving = false;\r\n    }\r\n  }\r\n\r\n  removeKeyboardEvents() {\r\n    window.removeEventListener('keydown', (event: KeyboardEvent) => this.inputKeyDown(event));\r\n    window.removeEventListener('keyup', (event: KeyboardEvent) => this.inputKeyUp(event));\r\n  }\r\n\r\n  intializeKeyBoardEvents() {\r\n    window.addEventListener('keydown', (event: KeyboardEvent) => this.inputKeyDown(event));\r\n    window.addEventListener('keyup', (event: KeyboardEvent) => this.inputKeyUp(event));\r\n  }\r\n\r\n  keyboardPlayerMovement() {\r\n    if (this.player.dead) return;\r\n\r\n    if (this.player.fighting) {\r\n      this.player.moving = false;\r\n      this.setKeysToFalse();\r\n      return;\r\n    }\r\n\r\n    if (this.w) {\r\n      this.player.y -= 2;\r\n      this.player.direction = [9,10,11];\r\n    }\r\n    if (this.a) {\r\n      this.player.x -= 2;\r\n      this.player.direction = [3,4,5];\r\n    }\r\n    if (this.s) {\r\n      this.player.y += 2;\r\n      this.player.direction = [0,1,2];\r\n    }\r\n    if (this.d) {\r\n      this.player.x += 2;\r\n      this.player.direction = [6,7,8];\r\n    }\r\n\r\n  }\r\n\r\n  checkToDisplayUserMenu(playerObject: Player) {\r\n    playerObject.displayPlayerMenu();\r\n    \r\n    if (this.escapeToggle === 2) {\r\n      this.escapeToggle = 0;\r\n    }\r\n  }\r\n\r\n  setKeysToFalse() {\r\n    this.w = false;\r\n    this.a = false;\r\n    this.s = false;\r\n    this.d = false;\r\n  }\r\n\r\n}\r\n","import Player from \"../engine/character/player\";\r\n\r\nexport function PlayerPauseMenu(context: CanvasRenderingContext2D, player: Player) {\r\n    function drawBackground() {\r\n        context.beginPath();\r\n        context.fillStyle = \"rgba(161, 255, 173, .8)\";\r\n        context.fillRect(0, 0, context.canvas.offsetWidth, context.canvas.offsetHeight);\r\n        context.closePath();\r\n        context.fill();\r\n    }\r\n\r\n    function drawPlayerStats() {\r\n        context.beginPath();\r\n        context.fillStyle = \"white\";\r\n        context.moveTo(650, 200);\r\n        context.lineTo(0, 200);\r\n        context.stroke();\r\n        context.closePath();\r\n        context.beginPath();\r\n        context.font = \"bold 1.5em Arial\";\r\n        context.fillStyle = \"black\";\r\n        context.fillText(\"Stats\", 30, 40);\r\n        context.font = \"bold 1em Arial\";\r\n        context.fillText(\"DMG: \" + player.damage, 30, 80);\r\n        context.font = \"bold 1em Arial\";\r\n        context.fillText(\"STR: \" + player.strength, 30, 110);\r\n        context.font = \"bold 1em Arial\";\r\n        context.fillText(\"AGI: \" + player.agility, 30, 140);\r\n        context.font = \"bold 1em Arial\";\r\n        context.fillStyle = \"black\";\r\n        context.fillText(\"DEF: \" + player.defense, 30, 170);\r\n        context.font = \"bold 1em Arial\";\r\n        context.fillStyle = \"black\";\r\n        context.fillText(\"HP: \" + player.health + \"/\" + player.maxHealth, 210, 80);\r\n        context.font = \"bold 1em Arial\";\r\n        context.fillStyle = \"black\";\r\n        context.fillText(\"Crit Chance: \" + player.critchance + \"%\", 210, 110);\r\n        context.font = \"bold 1.5em Arial\";\r\n        context.fillStyle = \"black\";\r\n        context.fillText(\"Information\", 30, 240);\r\n        context.font = \"bold 1em Arial\";\r\n        context.fillStyle = \"black\";\r\n        context.fillText(\"Level: \" + player.level, 30, 280);\r\n        context.font = \"bold 1em Arial\";\r\n        context.fillStyle = \"black\";\r\n        context.fillText(\"XP: \" + player.experience, 30, 310);\r\n        context.font = \"bold 1em Arial\";\r\n        context.fillStyle = \"black\";\r\n        context.fillText(\"XP till level: \" + player.getNextPlayerLevelExperience(), 30, 340);\r\n        context.font = \"bold 1em Arial\";\r\n        context.fillStyle = \"black\";\r\n        context.fillText(\"Gold: \" + player.gold, 30, 370);\r\n        context.fill();\r\n        context.closePath();\r\n    }\r\n\r\n    drawBackground();\r\n    drawPlayerStats();\r\n}","interface LevelDetail {\r\n    xp: number;\r\n}\r\n\r\nexport interface LevelDictionary {\r\n    [level: number]: LevelDetail\r\n}\r\n\r\nexport const playerLevelDictionary: LevelDictionary = {\r\n    2: { \"xp\": 85 },\r\n    3: { \"xp\": 350 },\r\n    4: { \"xp\": 610 },\r\n    5: { \"xp\": 943 },\r\n    6: { \"xp\": 1031 }\r\n}","import { BLOCK_SIZE } from '../settings/blocksize';\r\nimport Context from '../canvas/game-canvas';\r\nimport Enemy from '../enemy/enemy';\r\nimport Keyboard from './keyboard';\r\nimport { PlayerPauseMenu } from '../../ui/playerPauseMenu';\r\nimport Sprite from '../../entity/sprite';\r\nimport { playerLevelDictionary } from './playerleveldictionary';\r\nimport playerSprites from '../../entity/character_entities/character_sprites';\r\n\r\nexport default class Player {\r\n  playerSprite: Sprite;\r\n  damage: number;\r\n  level: number;\r\n  strength: number;\r\n  stamina: number;\r\n  agility: number;\r\n  luck: number;\r\n  intelligence: number;\r\n  health: number;\r\n  maxHealth: number;\r\n  defense: number;\r\n  hitchance: number;\r\n  critchance: number;\r\n  direction: number[];\r\n  playerhit: boolean;\r\n  x: number;\r\n  y: number;\r\n  moving: boolean;\r\n  gold: number;\r\n  experience: number;\r\n  fighting: boolean;\r\n  disableAttack: boolean;\r\n  battleTurn: boolean;\r\n  battleMoveForward: boolean;\r\n  battleMoveBackward: boolean;\r\n  victory: boolean;\r\n  dead: boolean;\r\n  keyboard: Keyboard;\r\n  size: number;\r\n  \r\n\r\n  constructor(playerSpriteImage: string) {\r\n    this.playerSprite = new Sprite(playerSpriteImage);\r\n    this.size = BLOCK_SIZE;\r\n    this.strength = 5;\r\n    this.stamina = 10;\r\n    this.agility = 6;\r\n    this.luck = 3;\r\n    this.intelligence = 4;\r\n    this.health = 100;\r\n    this.maxHealth = 100;\r\n    this.defense = 0;\r\n    this.level = 1;\r\n    this.critchance = this.calculateCritChance();\r\n    this.direction = [0,0,0];\r\n    this.x = 30;\r\n    this.y = 90;\r\n    this.damage = this.calculateDamage();\r\n    this.moving = false;\r\n    this.gold = 0;\r\n    this.experience = 0;\r\n    this.fighting = false;\r\n    this.battleTurn = false;\r\n    this.battleMoveForward = false;\r\n    this.battleMoveBackward = false;\r\n    this.disableAttack = false;\r\n    this.victory = false;\r\n    this.keyboard = new Keyboard(this);\r\n    this.dead = false;\r\n  }\r\n\r\n  render() {\r\n    this.playerSprite.image.width = 32;\r\n    this.playerSprite.image.height = 32;\r\n    this.playerSprite.draw(this.x, this.y, this.direction);\r\n  }\r\n\r\n  rewardFromBattle(enemyObject: Enemy) {\r\n    this.gold += enemyObject.goldReward;\r\n    this.processNewExperience(enemyObject.experienceReward);\r\n  }\r\n\r\n  processNewExperience(xp: number) {\r\n    this.experience += xp;\r\n\r\n    if (this.canPlayerLevel()) {\r\n      this.levelPlayer();\r\n    }\r\n  }\r\n  \r\n  canPlayerLevel(): boolean {\r\n    if (Object.keys(playerLevelDictionary).length === this.level) return false;\r\n\r\n    var nextLevelExperience: number = playerLevelDictionary[this.level + 1].xp;\r\n\r\n    if (this.experience >= nextLevelExperience) {\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  getNextPlayerLevelExperience(): string {\r\n    if (Object.keys(playerLevelDictionary).length === this.level) return 'Reached Max Level';\r\n\r\n    return (playerLevelDictionary[this.level + 1].xp - this.experience).toString();\r\n  }\r\n\r\n  levelPlayer() {\r\n    this.level++;\r\n\r\n    this.processNewLevel();\r\n  }\r\n\r\n  processNewLevel() {\r\n    this.levelUpStats();\r\n    \r\n    this.health = this.maxHealth;\r\n  }\r\n\r\n  calculateDamage(): number {\r\n    return Math.ceil(this.strength * 2.3);\r\n  }\r\n\r\n  calculateCritChance(): number {\r\n    return Math.ceil(12 + (this.agility / 5));\r\n  }\r\n\r\n  levelUpStats() {\r\n    this.strength += Math.ceil(Math.random() * 2);;\r\n    this.damage = this.calculateDamage();\r\n\r\n    this.stamina += Math.ceil(Math.random() * 2);\r\n    this.maxHealth += 25 + Math.ceil(this.stamina * 0.3);\r\n    \r\n    this.agility += Math.ceil(Math.random() * 4);\r\n    this.critchance = this.calculateCritChance();\r\n    \r\n    this.intelligence += Math.ceil(Math.random() * 2);\r\n    this.luck += Math.ceil(Math.random() * 2);\r\n  }\r\n\r\n  setPlayerCoordinates(xCoordinates: number, yCoordinates: number) {\r\n    this.x = xCoordinates;\r\n    this.y = yCoordinates;\r\n  }\r\n  \r\n  displayPlayerMenu() {\r\n    PlayerPauseMenu(Context.context, this);\r\n  } \r\n\r\n  basicAttackSequence(player: Player, enemy: Enemy) {\r\n    if (player.battleTurn) {\r\n      if (!player.battleMoveBackward &&\r\n        player.battleMoveForward &&\r\n        player.x >= 280) {\r\n\r\n        player.x -= 2;\r\n\r\n        if (player.x < 288) {\r\n          playerSprites.basicAttackSprite.draw(enemy.x, enemy.y, [0, 0, 0]);\r\n        }\r\n\r\n        if (player.x === 280) {\r\n          setTimeout(() => {\r\n            player.battleMoveForward = false;\r\n            player.battleMoveBackward = true;\r\n          }, 150);\r\n\r\n          let playerDamage = Math.random() * 100 < player.critchance ? this.damage * 2 : this.damage;\r\n\r\n          enemy.health -= playerDamage < enemy.health ? playerDamage : enemy.health;\r\n\r\n          if (enemy.health <= 0) {\r\n            enemy.direction = [0,0,0];\r\n            enemy.dead = true;\r\n            player.battleTurn = false;\r\n            player.battleMoveForward = false;\r\n            player.victory = true;\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!player.battleMoveForward &&\r\n        player.battleMoveBackward &&\r\n        player.x <= 348) {\r\n        player.x += 2;\r\n\r\n        if (player.x === 350) {\r\n          player.battleTurn = false;\r\n          player.battleMoveBackward = false;\r\n          enemy.battleTurn = true;\r\n          enemy.battleMoveForward = true;\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  resetToDefaultState(enemyObject: Enemy) {\r\n    this.victory = false;\r\n    this.disableAttack = false;\r\n    this.x = enemyObject.aggroX;\r\n    this.y = enemyObject.aggroY;\r\n    this.fighting = false;\r\n    this.direction = [0, 0, 0];\r\n    this.battleMoveBackward = false;\r\n  }\r\n\r\n}\r\n","import { DebugClickCursorCoordinates } from \"../cursor/CursorClickHelpers\";\r\nimport GameCanvas from \"../canvas/game-canvas\";\r\n\r\nexport const debugCursorCoordinates = () => {\r\n\r\n    GameCanvas.canvas.addEventListener('mousedown', (event) => {\r\n        DebugClickCursorCoordinates(GameCanvas.canvas, event);\r\n    });\r\n};","import '../sprites/cave_ceiling.png';\r\nimport '../sprites/cave_openingdoor.png';\r\nimport '../sprites/black_block.png';\r\nimport '../sprites/bushV1.png';\r\nimport '../sprites/slime_spritesheet.png';\r\nimport '../sprites/slimeSuper_spritesheet.png';\r\nimport '../sprites/shadewalker_Spritesheet.png';\r\nimport '../sprites/shadeKeeper_Spritesheet.png';\r\nimport '../sprites/playerAttack_Spritesheet.png';\r\nimport '../sprites/character_spritesheet.png';\r\nimport '../sprites/cliffgrass_side.png';\r\nimport '../sprites/dirt_terrian.png';\r\nimport '../sprites/cave_terrain.png';\r\nimport '../sprites/grass1.png' ;\r\nimport '../sprites/cave_openingdoor.png';\r\nimport '../sprites/cave_ceiling.png';\r\nimport '../sprites/cave_wall.png';\r\nimport '../sprites/caveentrance_open.png';\r\nimport '../sprites/cave_wall.png';\r\nimport '../sprites/cliffgrass_all.png';\r\nimport '../sprites/cliff_front.png';\r\nimport '../sprites/cliffgrass_bottomleft.png';\r\nimport '../sprites/cliffgrass_back.png';\r\nimport '../sprites/cliffgrass_front.png';\r\nimport '../sprites/cliffgrass_bottomright.png';\r\nimport '../sprites/cliffgrass_topbottom.png';\r\nimport '../sprites/cliffgrass_leftside.png';\r\nimport '../sprites/cliffgrass_topright.png';\r\nimport '../sprites/cliffgrass_topleft.png';\r\nimport '../sprites/cliffgrass_uprightbottom.png';\r\nimport '../sprites/cliffgrass_upleftbottom.png';\r\nimport '../sitesheet.css';\r\n\r\nimport { InitializeGameScenes, ridgeArea } from '../scenes/scenes';\r\n\r\nimport Player from '../engine/character/player';\r\nimport { RunGame } from '../rungame'\r\nimport { debugCursorCoordinates } from '../engine/eventlisteners/debug-event-listeners';\r\nimport { initializeAnimationCounters } from '../engine/animation/animationcounter';\r\n\r\nexport const startGame = () => {\r\n    InitializeGameScenes();\r\n    const player = new Player('sprites/character_spritesheet.png');\r\n\r\n    player.keyboard.intializeKeyBoardEvents();\r\n\r\n    console.log(\"started game\");\r\n\r\n    RunGame({ player: player, gameScene: ridgeArea });\r\n}\r\n\r\ninitializeAnimationCounters();\r\nstartGame();\r\n\r\ndebugCursorCoordinates();"],"names":["__webpack_require__","exports","definition","key","obj","prop","scriptUrl","document","scripts","i","slimeSprite","slimeSuperSprite","shadeWalkerSprite","shadeKeeperSprite","ShadeKeeper","ShadeWalker","SlimeSuper","GreenSlime","Limiter","fps","limiter","RunGame","runGameOptions","isColliding","entity","boundsX","boundsY","collisionSize","withinXBounds","withinYBounds","computeDistanceBetweenEntities","xOne","yOne","xTwo","yTwo","xDistance","yDistance","transferNewLocationOnCollision","player","transferScenes","currentAnimationID","transferScene","gameScene","transferX","transferY","renderMiscSprites","staticSprite","entities","HTMLCanvas","canvasId","width","height","generateHTMLCanvas","element","BLOCK_W","BLOCK_H","BLOCK_SIZE","Animate","_delay","_indexCounter","_currentFrame","maxAnimatableSprites","i2xy","index","mapWidth","x","y","xy2i","counterIndex","animatableSprites","drawAnimation","animatableSprite","spriteSheet","delayAmount","res","utility","initializeAnimationCounters","resetAnimationCounter","Sprite","filepath","filename","x_times","various","animationImageObj","dirt_terrain","cave_terrain","grass_terrain","blackblock","bush","cliffgrass_back","cliffgrass_front","cliffgrass_left","cliffgrass_right","cliff_front","cliffgrass_topright","cliffgrass_all","cliffgrass_bottomright","cliffgrass_bottomleft","cliffgrass_topleft","cliffgrass_toprightbottom","cliffgrass_topbottom","cliffentrance_open","cliffgrass_topleftbottom","ridgeMapTileCollisionMin","ridge_battle_map_sprites","ridge_map_sprites","ridge_sprites","DebugClickCursorCoordinates","canvas","event","GetXYClickLocation","rect","attackEnemy","enemy","BattleClickLocations","BattleEventManager","_player","_enemy","displayPlayerHealth","context","playerObject","displayEnemyHealth","enemyObject","playerAttackMenu","displayRewardMenu","displayLevelUp","displayFallenText","Scene","mapArr","tileObj","propertyIndex","tilex","tiley","objectKeys","tileDetails","tileCollisionMin","arrIndex","tileX","tileY","tileIndex","GameOverClickLocations","removeGameOverEventListeners","startGame","GameOverClickHandler","addGameOverEventListeners","displayBeatGame","displayGameOver","mapBattle","BattleScreen","_currentPlayerLevel","_battleEventManager","gameSceneOrigin","classThis","sceneOrigin","Enemy","_x","_y","scene","composition","battleEventOrigin","battleEventManager","battleScreen","influenceObject","patToX","patToY","patrolCoordinates","togglePatrolled","patrolDetailsObj","mapRidge","mapRidgeAreaBack","mapRidgeAreaCave","RidgeArea","_transferScenes","RidgeAreaBack","RidgeAreaCave","cave_wall","cave_ceiling","cave_opening","caveMapTileCollisionMin","cave_battle_map_sprites","cave_map_sprites","mapRidgeAreaCaveLevelOne","mapRidgeAreaCaveLevelTwo","RidgeAreaCaveLevelOne","RidgeAreaCaveLevelTwo","ridgeArea","ridgeAreaBack","ridgeAreaCave","ridgeAreaCaveLevelOne","ridgeAreaCaveLevelTwo","InitializeGameScenes","Keyboard","PlayerPauseMenu","drawBackground","drawPlayerStats","playerLevelDictionary","Player","playerSpriteImage","xp","nextLevelExperience","xCoordinates","yCoordinates","playerDamage","debugCursorCoordinates"],"sourceRoot":""}